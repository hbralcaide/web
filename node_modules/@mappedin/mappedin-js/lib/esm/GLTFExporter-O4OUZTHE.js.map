{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/three@0.173.0/node_modules/three/examples/jsm/exporters/GLTFExporter.js"],
  "sourcesContent": ["import {\n\tBufferAttribute,\n\tClampToEdgeWrapping,\n\tColor,\n\tDoubleSide,\n\tInterpolateDiscrete,\n\tInterpolateLinear,\n\tNoColorSpace,\n\tLinearFilter,\n\tLinearMipmapLinearFilter,\n\tLinearMipmapNearestFilter,\n\tMathUtils,\n\tMatrix4,\n\tMirroredRepeatWrapping,\n\tNearestFilter,\n\tNearestMipmapLinearFilter,\n\tNearestMipmapNearestFilter,\n\tPropertyBinding,\n\tRGBAFormat,\n\tRepeatWrapping,\n\tScene,\n\tSource,\n\tSRGBColorSpace,\n\tCompressedTexture,\n\tVector3,\n\tQuaternion,\n\tREVISION\n} from 'three';\n\n/**\n * The KHR_mesh_quantization extension allows these extra attribute component types\n *\n * @see https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_mesh_quantization/README.md#extending-mesh-attributes\n */\nconst KHR_mesh_quantization_ExtraAttrTypes = {\n\tPOSITION: [\n\t\t'byte',\n\t\t'byte normalized',\n\t\t'unsigned byte',\n\t\t'unsigned byte normalized',\n\t\t'short',\n\t\t'short normalized',\n\t\t'unsigned short',\n\t\t'unsigned short normalized',\n\t],\n\tNORMAL: [\n\t\t'byte normalized',\n\t\t'short normalized',\n\t],\n\tTANGENT: [\n\t\t'byte normalized',\n\t\t'short normalized',\n\t],\n\tTEXCOORD: [\n\t\t'byte',\n\t\t'byte normalized',\n\t\t'unsigned byte',\n\t\t'short',\n\t\t'short normalized',\n\t\t'unsigned short',\n\t],\n};\n\n\nclass GLTFExporter {\n\n\tconstructor() {\n\n\t\tthis.textureUtils = null;\n\n\t\tthis.pluginCallbacks = [];\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFLightExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsUnlitExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsTransmissionExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsVolumeExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsIorExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsSpecularExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsClearcoatExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsDispersionExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsIridescenceExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsSheenExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsAnisotropyExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsEmissiveStrengthExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsBumpExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMeshGpuInstancing( writer );\n\n\t\t} );\n\n\t}\n\n\tregister( callback ) {\n\n\t\tif ( this.pluginCallbacks.indexOf( callback ) === - 1 ) {\n\n\t\t\tthis.pluginCallbacks.push( callback );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunregister( callback ) {\n\n\t\tif ( this.pluginCallbacks.indexOf( callback ) !== - 1 ) {\n\n\t\t\tthis.pluginCallbacks.splice( this.pluginCallbacks.indexOf( callback ), 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetTextureUtils( utils ) {\n\n\t\tthis.textureUtils = utils;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Parse scenes and generate GLTF output\n\t *\n\t * @param  {Scene|Array<Scene>} input   Scene or Array of THREE.Scenes\n\t * @param  {Function} onDone  Callback on completed\n\t * @param  {Function} onError  Callback on errors\n\t * @param  {Object} options options\n\t */\n\tparse( input, onDone, onError, options ) {\n\n\t\tconst writer = new GLTFWriter();\n\t\tconst plugins = [];\n\n\t\tfor ( let i = 0, il = this.pluginCallbacks.length; i < il; i ++ ) {\n\n\t\t\tplugins.push( this.pluginCallbacks[ i ]( writer ) );\n\n\t\t}\n\n\t\twriter.setPlugins( plugins );\n\t\twriter.setTextureUtils( this.textureUtils );\n\t\twriter.writeAsync( input, onDone, options ).catch( onError );\n\n\t}\n\n\tparseAsync( input, options ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.parse( input, resolve, reject, options );\n\n\t\t} );\n\n\t}\n\n}\n\n//------------------------------------------------------------------------------\n// Constants\n//------------------------------------------------------------------------------\n\nconst WEBGL_CONSTANTS = {\n\tPOINTS: 0x0000,\n\tLINES: 0x0001,\n\tLINE_LOOP: 0x0002,\n\tLINE_STRIP: 0x0003,\n\tTRIANGLES: 0x0004,\n\tTRIANGLE_STRIP: 0x0005,\n\tTRIANGLE_FAN: 0x0006,\n\n\tBYTE: 0x1400,\n\tUNSIGNED_BYTE: 0x1401,\n\tSHORT: 0x1402,\n\tUNSIGNED_SHORT: 0x1403,\n\tINT: 0x1404,\n\tUNSIGNED_INT: 0x1405,\n\tFLOAT: 0x1406,\n\n\tARRAY_BUFFER: 0x8892,\n\tELEMENT_ARRAY_BUFFER: 0x8893,\n\n\tNEAREST: 0x2600,\n\tLINEAR: 0x2601,\n\tNEAREST_MIPMAP_NEAREST: 0x2700,\n\tLINEAR_MIPMAP_NEAREST: 0x2701,\n\tNEAREST_MIPMAP_LINEAR: 0x2702,\n\tLINEAR_MIPMAP_LINEAR: 0x2703,\n\n\tCLAMP_TO_EDGE: 33071,\n\tMIRRORED_REPEAT: 33648,\n\tREPEAT: 10497\n};\n\nconst KHR_MESH_QUANTIZATION = 'KHR_mesh_quantization';\n\nconst THREE_TO_WEBGL = {};\n\nTHREE_TO_WEBGL[ NearestFilter ] = WEBGL_CONSTANTS.NEAREST;\nTHREE_TO_WEBGL[ NearestMipmapNearestFilter ] = WEBGL_CONSTANTS.NEAREST_MIPMAP_NEAREST;\nTHREE_TO_WEBGL[ NearestMipmapLinearFilter ] = WEBGL_CONSTANTS.NEAREST_MIPMAP_LINEAR;\nTHREE_TO_WEBGL[ LinearFilter ] = WEBGL_CONSTANTS.LINEAR;\nTHREE_TO_WEBGL[ LinearMipmapNearestFilter ] = WEBGL_CONSTANTS.LINEAR_MIPMAP_NEAREST;\nTHREE_TO_WEBGL[ LinearMipmapLinearFilter ] = WEBGL_CONSTANTS.LINEAR_MIPMAP_LINEAR;\n\nTHREE_TO_WEBGL[ ClampToEdgeWrapping ] = WEBGL_CONSTANTS.CLAMP_TO_EDGE;\nTHREE_TO_WEBGL[ RepeatWrapping ] = WEBGL_CONSTANTS.REPEAT;\nTHREE_TO_WEBGL[ MirroredRepeatWrapping ] = WEBGL_CONSTANTS.MIRRORED_REPEAT;\n\nconst PATH_PROPERTIES = {\n\tscale: 'scale',\n\tposition: 'translation',\n\tquaternion: 'rotation',\n\tmorphTargetInfluences: 'weights'\n};\n\nconst DEFAULT_SPECULAR_COLOR = new Color();\n\n// GLB constants\n// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#glb-file-format-specification\n\nconst GLB_HEADER_BYTES = 12;\nconst GLB_HEADER_MAGIC = 0x46546C67;\nconst GLB_VERSION = 2;\n\nconst GLB_CHUNK_PREFIX_BYTES = 8;\nconst GLB_CHUNK_TYPE_JSON = 0x4E4F534A;\nconst GLB_CHUNK_TYPE_BIN = 0x004E4942;\n\n//------------------------------------------------------------------------------\n// Utility functions\n//------------------------------------------------------------------------------\n\n/**\n * Compare two arrays\n * @param  {Array} array1 Array 1 to compare\n * @param  {Array} array2 Array 2 to compare\n * @return {Boolean}        Returns true if both arrays are equal\n */\nfunction equalArray( array1, array2 ) {\n\n\treturn ( array1.length === array2.length ) && array1.every( function ( element, index ) {\n\n\t\treturn element === array2[ index ];\n\n\t} );\n\n}\n\n/**\n * Converts a string to an ArrayBuffer.\n * @param  {string} text\n * @return {ArrayBuffer}\n */\nfunction stringToArrayBuffer( text ) {\n\n\treturn new TextEncoder().encode( text ).buffer;\n\n}\n\n/**\n * Is identity matrix\n *\n * @param {Matrix4} matrix\n * @returns {Boolean} Returns true, if parameter is identity matrix\n */\nfunction isIdentityMatrix( matrix ) {\n\n\treturn equalArray( matrix.elements, [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ] );\n\n}\n\n/**\n * Get the min and max vectors from the given attribute\n *\n * @param  {BufferAttribute} attribute Attribute to find the min/max in range from start to start + count\n * @param  {Number} start Start index\n * @param  {Number} count Range to cover\n * @return {Object} Object containing the `min` and `max` values (As an array of attribute.itemSize components)\n */\nfunction getMinMax( attribute, start, count ) {\n\n\tconst output = {\n\n\t\tmin: new Array( attribute.itemSize ).fill( Number.POSITIVE_INFINITY ),\n\t\tmax: new Array( attribute.itemSize ).fill( Number.NEGATIVE_INFINITY )\n\n\t};\n\n\tfor ( let i = start; i < start + count; i ++ ) {\n\n\t\tfor ( let a = 0; a < attribute.itemSize; a ++ ) {\n\n\t\t\tlet value;\n\n\t\t\tif ( attribute.itemSize > 4 ) {\n\n\t\t\t\t // no support for interleaved data for itemSize > 4\n\n\t\t\t\tvalue = attribute.array[ i * attribute.itemSize + a ];\n\n\t\t\t} else {\n\n\t\t\t\tif ( a === 0 ) value = attribute.getX( i );\n\t\t\t\telse if ( a === 1 ) value = attribute.getY( i );\n\t\t\t\telse if ( a === 2 ) value = attribute.getZ( i );\n\t\t\t\telse if ( a === 3 ) value = attribute.getW( i );\n\n\t\t\t\tif ( attribute.normalized === true ) {\n\n\t\t\t\t\tvalue = MathUtils.normalize( value, attribute.array );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toutput.min[ a ] = Math.min( output.min[ a ], value );\n\t\t\toutput.max[ a ] = Math.max( output.max[ a ], value );\n\n\t\t}\n\n\t}\n\n\treturn output;\n\n}\n\n/**\n * Get the required size + padding for a buffer, rounded to the next 4-byte boundary.\n * https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#data-alignment\n *\n * @param {Number} bufferSize The size the original buffer. Should be an integer.\n * @returns {Number} new buffer size with required padding as an integer.\n *\n */\nfunction getPaddedBufferSize( bufferSize ) {\n\n\treturn Math.ceil( bufferSize / 4 ) * 4;\n\n}\n\n/**\n * Returns a buffer aligned to 4-byte boundary.\n *\n * @param {ArrayBuffer} arrayBuffer Buffer to pad\n * @param {Number} [paddingByte=0] Should be an integer\n * @returns {ArrayBuffer} The same buffer if it's already aligned to 4-byte boundary or a new buffer\n */\nfunction getPaddedArrayBuffer( arrayBuffer, paddingByte = 0 ) {\n\n\tconst paddedLength = getPaddedBufferSize( arrayBuffer.byteLength );\n\n\tif ( paddedLength !== arrayBuffer.byteLength ) {\n\n\t\tconst array = new Uint8Array( paddedLength );\n\t\tarray.set( new Uint8Array( arrayBuffer ) );\n\n\t\tif ( paddingByte !== 0 ) {\n\n\t\t\tfor ( let i = arrayBuffer.byteLength; i < paddedLength; i ++ ) {\n\n\t\t\t\tarray[ i ] = paddingByte;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn array.buffer;\n\n\t}\n\n\treturn arrayBuffer;\n\n}\n\nfunction getCanvas() {\n\n\tif ( typeof document === 'undefined' && typeof OffscreenCanvas !== 'undefined' ) {\n\n\t\treturn new OffscreenCanvas( 1, 1 );\n\n\t}\n\n\treturn document.createElement( 'canvas' );\n\n}\n\nfunction getToBlobPromise( canvas, mimeType ) {\n\n\tif ( canvas.toBlob !== undefined ) {\n\n\t\treturn new Promise( ( resolve ) => canvas.toBlob( resolve, mimeType ) );\n\n\t}\n\n\tlet quality;\n\n\t// Blink's implementation of convertToBlob seems to default to a quality level of 100%\n\t// Use the Blink default quality levels of toBlob instead so that file sizes are comparable.\n\tif ( mimeType === 'image/jpeg' ) {\n\n\t\tquality = 0.92;\n\n\t} else if ( mimeType === 'image/webp' ) {\n\n\t\tquality = 0.8;\n\n\t}\n\n\treturn canvas.convertToBlob( {\n\n\t\ttype: mimeType,\n\t\tquality: quality\n\n\t} );\n\n}\n\n/**\n * Writer\n */\nclass GLTFWriter {\n\n\tconstructor() {\n\n\t\tthis.plugins = [];\n\n\t\tthis.options = {};\n\t\tthis.pending = [];\n\t\tthis.buffers = [];\n\n\t\tthis.byteOffset = 0;\n\t\tthis.buffers = [];\n\t\tthis.nodeMap = new Map();\n\t\tthis.skins = [];\n\n\t\tthis.extensionsUsed = {};\n\t\tthis.extensionsRequired = {};\n\n\t\tthis.uids = new Map();\n\t\tthis.uid = 0;\n\n\t\tthis.json = {\n\t\t\tasset: {\n\t\t\t\tversion: '2.0',\n\t\t\t\tgenerator: 'THREE.GLTFExporter r' + REVISION\n\t\t\t}\n\t\t};\n\n\t\tthis.cache = {\n\t\t\tmeshes: new Map(),\n\t\t\tattributes: new Map(),\n\t\t\tattributesNormalized: new Map(),\n\t\t\tmaterials: new Map(),\n\t\t\ttextures: new Map(),\n\t\t\timages: new Map()\n\t\t};\n\n\t\tthis.textureUtils = null;\n\n\t}\n\n\tsetPlugins( plugins ) {\n\n\t\tthis.plugins = plugins;\n\n\t}\n\n\tsetTextureUtils( utils ) {\n\n\t\tthis.textureUtils = utils;\n\n\t}\n\n\t/**\n\t * Parse scenes and generate GLTF output\n\t *\n\t * @param {Scene|Array<Scene>} input Scene or Array of THREE.Scenes\n\t * @param {Function} onDone Callback on completed\n\t * @param {Object} options options\n\t */\n\tasync writeAsync( input, onDone, options = {} ) {\n\n\t\tthis.options = Object.assign( {\n\t\t\t// default options\n\t\t\tbinary: false,\n\t\t\ttrs: false,\n\t\t\tonlyVisible: true,\n\t\t\tmaxTextureSize: Infinity,\n\t\t\tanimations: [],\n\t\t\tincludeCustomExtensions: false\n\t\t}, options );\n\n\t\tif ( this.options.animations.length > 0 ) {\n\n\t\t\t// Only TRS properties, and not matrices, may be targeted by animation.\n\t\t\tthis.options.trs = true;\n\n\t\t}\n\n\t\tawait this.processInputAsync( input );\n\n\t\tawait Promise.all( this.pending );\n\n\t\tconst writer = this;\n\t\tconst buffers = writer.buffers;\n\t\tconst json = writer.json;\n\t\toptions = writer.options;\n\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\t\tconst extensionsRequired = writer.extensionsRequired;\n\n\t\t// Merge buffers.\n\t\tconst blob = new Blob( buffers, { type: 'application/octet-stream' } );\n\n\t\t// Declare extensions.\n\t\tconst extensionsUsedList = Object.keys( extensionsUsed );\n\t\tconst extensionsRequiredList = Object.keys( extensionsRequired );\n\n\t\tif ( extensionsUsedList.length > 0 ) json.extensionsUsed = extensionsUsedList;\n\t\tif ( extensionsRequiredList.length > 0 ) json.extensionsRequired = extensionsRequiredList;\n\n\t\t// Update bytelength of the single buffer.\n\t\tif ( json.buffers && json.buffers.length > 0 ) json.buffers[ 0 ].byteLength = blob.size;\n\n\t\tif ( options.binary === true ) {\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#glb-file-format-specification\n\n\t\t\tconst reader = new FileReader();\n\t\t\treader.readAsArrayBuffer( blob );\n\t\t\treader.onloadend = function () {\n\n\t\t\t\t// Binary chunk.\n\t\t\t\tconst binaryChunk = getPaddedArrayBuffer( reader.result );\n\t\t\t\tconst binaryChunkPrefix = new DataView( new ArrayBuffer( GLB_CHUNK_PREFIX_BYTES ) );\n\t\t\t\tbinaryChunkPrefix.setUint32( 0, binaryChunk.byteLength, true );\n\t\t\t\tbinaryChunkPrefix.setUint32( 4, GLB_CHUNK_TYPE_BIN, true );\n\n\t\t\t\t// JSON chunk.\n\t\t\t\tconst jsonChunk = getPaddedArrayBuffer( stringToArrayBuffer( JSON.stringify( json ) ), 0x20 );\n\t\t\t\tconst jsonChunkPrefix = new DataView( new ArrayBuffer( GLB_CHUNK_PREFIX_BYTES ) );\n\t\t\t\tjsonChunkPrefix.setUint32( 0, jsonChunk.byteLength, true );\n\t\t\t\tjsonChunkPrefix.setUint32( 4, GLB_CHUNK_TYPE_JSON, true );\n\n\t\t\t\t// GLB header.\n\t\t\t\tconst header = new ArrayBuffer( GLB_HEADER_BYTES );\n\t\t\t\tconst headerView = new DataView( header );\n\t\t\t\theaderView.setUint32( 0, GLB_HEADER_MAGIC, true );\n\t\t\t\theaderView.setUint32( 4, GLB_VERSION, true );\n\t\t\t\tconst totalByteLength = GLB_HEADER_BYTES\n\t\t\t\t\t+ jsonChunkPrefix.byteLength + jsonChunk.byteLength\n\t\t\t\t\t+ binaryChunkPrefix.byteLength + binaryChunk.byteLength;\n\t\t\t\theaderView.setUint32( 8, totalByteLength, true );\n\n\t\t\t\tconst glbBlob = new Blob( [\n\t\t\t\t\theader,\n\t\t\t\t\tjsonChunkPrefix,\n\t\t\t\t\tjsonChunk,\n\t\t\t\t\tbinaryChunkPrefix,\n\t\t\t\t\tbinaryChunk\n\t\t\t\t], { type: 'application/octet-stream' } );\n\n\t\t\t\tconst glbReader = new FileReader();\n\t\t\t\tglbReader.readAsArrayBuffer( glbBlob );\n\t\t\t\tglbReader.onloadend = function () {\n\n\t\t\t\t\tonDone( glbReader.result );\n\n\t\t\t\t};\n\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tif ( json.buffers && json.buffers.length > 0 ) {\n\n\t\t\t\tconst reader = new FileReader();\n\t\t\t\treader.readAsDataURL( blob );\n\t\t\t\treader.onloadend = function () {\n\n\t\t\t\t\tconst base64data = reader.result;\n\t\t\t\t\tjson.buffers[ 0 ].uri = base64data;\n\t\t\t\t\tonDone( json );\n\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tonDone( json );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\t/**\n\t * Serializes a userData.\n\t *\n\t * @param {THREE.Object3D|THREE.Material} object\n\t * @param {Object} objectDef\n\t */\n\tserializeUserData( object, objectDef ) {\n\n\t\tif ( Object.keys( object.userData ).length === 0 ) return;\n\n\t\tconst options = this.options;\n\t\tconst extensionsUsed = this.extensionsUsed;\n\n\t\ttry {\n\n\t\t\tconst json = JSON.parse( JSON.stringify( object.userData ) );\n\n\t\t\tif ( options.includeCustomExtensions && json.gltfExtensions ) {\n\n\t\t\t\tif ( objectDef.extensions === undefined ) objectDef.extensions = {};\n\n\t\t\t\tfor ( const extensionName in json.gltfExtensions ) {\n\n\t\t\t\t\tobjectDef.extensions[ extensionName ] = json.gltfExtensions[ extensionName ];\n\t\t\t\t\textensionsUsed[ extensionName ] = true;\n\n\t\t\t\t}\n\n\t\t\t\tdelete json.gltfExtensions;\n\n\t\t\t}\n\n\t\t\tif ( Object.keys( json ).length > 0 ) objectDef.extras = json;\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFExporter: userData of \\'' + object.name + '\\' ' +\n\t\t\t\t'won\\'t be serialized because of JSON.stringify error - ' + error.message );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns ids for buffer attributes.\n\t *\n\t * @param  {Object} attribute\n\t * @param {boolean} [isRelativeCopy=false]\n\t * @return {Number} An integer\n\t */\n\tgetUID( attribute, isRelativeCopy = false ) {\n\n\t\tif ( this.uids.has( attribute ) === false ) {\n\n\t\t\tconst uids = new Map();\n\n\t\t\tuids.set( true, this.uid ++ );\n\t\t\tuids.set( false, this.uid ++ );\n\n\t\t\tthis.uids.set( attribute, uids );\n\n\t\t}\n\n\t\tconst uids = this.uids.get( attribute );\n\n\t\treturn uids.get( isRelativeCopy );\n\n\t}\n\n\t/**\n\t * Checks if normal attribute values are normalized.\n\t *\n\t * @param {BufferAttribute} normal\n\t * @returns {Boolean}\n\t */\n\tisNormalizedNormalAttribute( normal ) {\n\n\t\tconst cache = this.cache;\n\n\t\tif ( cache.attributesNormalized.has( normal ) ) return false;\n\n\t\tconst v = new Vector3();\n\n\t\tfor ( let i = 0, il = normal.count; i < il; i ++ ) {\n\n\t\t\t// 0.0005 is from glTF-validator\n\t\t\tif ( Math.abs( v.fromBufferAttribute( normal, i ).length() - 1.0 ) > 0.0005 ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\t/**\n\t * Creates normalized normal buffer attribute.\n\t *\n\t * @param {BufferAttribute} normal\n\t * @returns {BufferAttribute}\n\t *\n\t */\n\tcreateNormalizedNormalAttribute( normal ) {\n\n\t\tconst cache = this.cache;\n\n\t\tif ( cache.attributesNormalized.has( normal ) )\treturn cache.attributesNormalized.get( normal );\n\n\t\tconst attribute = normal.clone();\n\t\tconst v = new Vector3();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tv.fromBufferAttribute( attribute, i );\n\n\t\t\tif ( v.x === 0 && v.y === 0 && v.z === 0 ) {\n\n\t\t\t\t// if values can't be normalized set (1, 0, 0)\n\t\t\t\tv.setX( 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\tv.normalize();\n\n\t\t\t}\n\n\t\t\tattribute.setXYZ( i, v.x, v.y, v.z );\n\n\t\t}\n\n\t\tcache.attributesNormalized.set( normal, attribute );\n\n\t\treturn attribute;\n\n\t}\n\n\t/**\n\t * Applies a texture transform, if present, to the map definition. Requires\n\t * the KHR_texture_transform extension.\n\t *\n\t * @param {Object} mapDef\n\t * @param {THREE.Texture} texture\n\t */\n\tapplyTextureTransform( mapDef, texture ) {\n\n\t\tlet didTransform = false;\n\t\tconst transformDef = {};\n\n\t\tif ( texture.offset.x !== 0 || texture.offset.y !== 0 ) {\n\n\t\t\ttransformDef.offset = texture.offset.toArray();\n\t\t\tdidTransform = true;\n\n\t\t}\n\n\t\tif ( texture.rotation !== 0 ) {\n\n\t\t\ttransformDef.rotation = texture.rotation;\n\t\t\tdidTransform = true;\n\n\t\t}\n\n\t\tif ( texture.repeat.x !== 1 || texture.repeat.y !== 1 ) {\n\n\t\t\ttransformDef.scale = texture.repeat.toArray();\n\t\t\tdidTransform = true;\n\n\t\t}\n\n\t\tif ( didTransform ) {\n\n\t\t\tmapDef.extensions = mapDef.extensions || {};\n\t\t\tmapDef.extensions[ 'KHR_texture_transform' ] = transformDef;\n\t\t\tthis.extensionsUsed[ 'KHR_texture_transform' ] = true;\n\n\t\t}\n\n\t}\n\n\tasync buildMetalRoughTextureAsync( metalnessMap, roughnessMap ) {\n\n\t\tif ( metalnessMap === roughnessMap ) return metalnessMap;\n\n\t\tfunction getEncodingConversion( map ) {\n\n\t\t\tif ( map.colorSpace === SRGBColorSpace ) {\n\n\t\t\t\treturn function SRGBToLinear( c ) {\n\n\t\t\t\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn function LinearToLinear( c ) {\n\n\t\t\t\treturn c;\n\n\t\t\t};\n\n\t\t}\n\n\t\tif ( metalnessMap instanceof CompressedTexture ) {\n\n\t\t\tmetalnessMap = await this.decompressTextureAsync( metalnessMap );\n\n\t\t}\n\n\t\tif ( roughnessMap instanceof CompressedTexture ) {\n\n\t\t\troughnessMap = await this.decompressTextureAsync( roughnessMap );\n\n\t\t}\n\n\t\tconst metalness = metalnessMap ? metalnessMap.image : null;\n\t\tconst roughness = roughnessMap ? roughnessMap.image : null;\n\n\t\tconst width = Math.max( metalness ? metalness.width : 0, roughness ? roughness.width : 0 );\n\t\tconst height = Math.max( metalness ? metalness.height : 0, roughness ? roughness.height : 0 );\n\n\t\tconst canvas = getCanvas();\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\n\t\tconst context = canvas.getContext( '2d', {\n\t\t\twillReadFrequently: true,\n\t\t} );\n\t\tcontext.fillStyle = '#00ffff';\n\t\tcontext.fillRect( 0, 0, width, height );\n\n\t\tconst composite = context.getImageData( 0, 0, width, height );\n\n\t\tif ( metalness ) {\n\n\t\t\tcontext.drawImage( metalness, 0, 0, width, height );\n\n\t\t\tconst convert = getEncodingConversion( metalnessMap );\n\t\t\tconst data = context.getImageData( 0, 0, width, height ).data;\n\n\t\t\tfor ( let i = 2; i < data.length; i += 4 ) {\n\n\t\t\t\tcomposite.data[ i ] = convert( data[ i ] / 256 ) * 256;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( roughness ) {\n\n\t\t\tcontext.drawImage( roughness, 0, 0, width, height );\n\n\t\t\tconst convert = getEncodingConversion( roughnessMap );\n\t\t\tconst data = context.getImageData( 0, 0, width, height ).data;\n\n\t\t\tfor ( let i = 1; i < data.length; i += 4 ) {\n\n\t\t\t\tcomposite.data[ i ] = convert( data[ i ] / 256 ) * 256;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcontext.putImageData( composite, 0, 0 );\n\n\t\t//\n\n\t\tconst reference = metalnessMap || roughnessMap;\n\n\t\tconst texture = reference.clone();\n\n\t\ttexture.source = new Source( canvas );\n\t\ttexture.colorSpace = NoColorSpace;\n\t\ttexture.channel = ( metalnessMap || roughnessMap ).channel;\n\n\t\tif ( metalnessMap && roughnessMap && metalnessMap.channel !== roughnessMap.channel ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFExporter: UV channels for metalnessMap and roughnessMap textures must match.' );\n\n\t\t}\n\n\t\tconsole.warn( 'THREE.GLTFExporter: Merged metalnessMap and roughnessMap textures.' );\n\n\t\treturn texture;\n\n\t}\n\n\n\tasync decompressTextureAsync( texture, maxTextureSize = Infinity ) {\n\n\t\tif ( this.textureUtils === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFExporter: setTextureUtils() must be called to process compressed textures.' );\n\n\t\t}\n\n\t\treturn await this.textureUtils.decompress( texture, maxTextureSize );\n\n\t}\n\n\t/**\n\t * Process a buffer to append to the default one.\n\t * @param  {ArrayBuffer} buffer\n\t * @return {0}\n\t */\n\tprocessBuffer( buffer ) {\n\n\t\tconst json = this.json;\n\t\tconst buffers = this.buffers;\n\n\t\tif ( ! json.buffers ) json.buffers = [ { byteLength: 0 } ];\n\n\t\t// All buffers are merged before export.\n\t\tbuffers.push( buffer );\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Process and generate a BufferView\n\t * @param  {BufferAttribute} attribute\n\t * @param  {number} componentType\n\t * @param  {number} start\n\t * @param  {number} count\n\t * @param  {number?} target Target usage of the BufferView\n\t * @return {Object}\n\t */\n\tprocessBufferView( attribute, componentType, start, count, target ) {\n\n\t\tconst json = this.json;\n\n\t\tif ( ! json.bufferViews ) json.bufferViews = [];\n\n\t\t// Create a new dataview and dump the attribute's array into it\n\n\t\tlet componentSize;\n\n\t\tswitch ( componentType ) {\n\n\t\t\tcase WEBGL_CONSTANTS.BYTE:\n\t\t\tcase WEBGL_CONSTANTS.UNSIGNED_BYTE:\n\n\t\t\t\tcomponentSize = 1;\n\n\t\t\t\tbreak;\n\n\t\t\tcase WEBGL_CONSTANTS.SHORT:\n\t\t\tcase WEBGL_CONSTANTS.UNSIGNED_SHORT:\n\n\t\t\t\tcomponentSize = 2;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tcomponentSize = 4;\n\n\t\t}\n\n\t\tlet byteStride = attribute.itemSize * componentSize;\n\n\t\tif ( target === WEBGL_CONSTANTS.ARRAY_BUFFER ) {\n\n\t\t\t// Each element of a vertex attribute MUST be aligned to 4-byte boundaries\n\t\t\t// inside a bufferView\n\t\t\tbyteStride = Math.ceil( byteStride / 4 ) * 4;\n\n\t\t}\n\n\t\tconst byteLength = getPaddedBufferSize( count * byteStride );\n\t\tconst dataView = new DataView( new ArrayBuffer( byteLength ) );\n\t\tlet offset = 0;\n\n\t\tfor ( let i = start; i < start + count; i ++ ) {\n\n\t\t\tfor ( let a = 0; a < attribute.itemSize; a ++ ) {\n\n\t\t\t\tlet value;\n\n\t\t\t\tif ( attribute.itemSize > 4 ) {\n\n\t\t\t\t\t // no support for interleaved data for itemSize > 4\n\n\t\t\t\t\tvalue = attribute.array[ i * attribute.itemSize + a ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( a === 0 ) value = attribute.getX( i );\n\t\t\t\t\telse if ( a === 1 ) value = attribute.getY( i );\n\t\t\t\t\telse if ( a === 2 ) value = attribute.getZ( i );\n\t\t\t\t\telse if ( a === 3 ) value = attribute.getW( i );\n\n\t\t\t\t\tif ( attribute.normalized === true ) {\n\n\t\t\t\t\t\tvalue = MathUtils.normalize( value, attribute.array );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( componentType === WEBGL_CONSTANTS.FLOAT ) {\n\n\t\t\t\t\tdataView.setFloat32( offset, value, true );\n\n\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.INT ) {\n\n\t\t\t\t\tdataView.setInt32( offset, value, true );\n\n\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_INT ) {\n\n\t\t\t\t\tdataView.setUint32( offset, value, true );\n\n\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.SHORT ) {\n\n\t\t\t\t\tdataView.setInt16( offset, value, true );\n\n\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_SHORT ) {\n\n\t\t\t\t\tdataView.setUint16( offset, value, true );\n\n\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.BYTE ) {\n\n\t\t\t\t\tdataView.setInt8( offset, value );\n\n\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_BYTE ) {\n\n\t\t\t\t\tdataView.setUint8( offset, value );\n\n\t\t\t\t}\n\n\t\t\t\toffset += componentSize;\n\n\t\t\t}\n\n\t\t\tif ( ( offset % byteStride ) !== 0 ) {\n\n\t\t\t\toffset += byteStride - ( offset % byteStride );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bufferViewDef = {\n\n\t\t\tbuffer: this.processBuffer( dataView.buffer ),\n\t\t\tbyteOffset: this.byteOffset,\n\t\t\tbyteLength: byteLength\n\n\t\t};\n\n\t\tif ( target !== undefined ) bufferViewDef.target = target;\n\n\t\tif ( target === WEBGL_CONSTANTS.ARRAY_BUFFER ) {\n\n\t\t\t// Only define byteStride for vertex attributes.\n\t\t\tbufferViewDef.byteStride = byteStride;\n\n\t\t}\n\n\t\tthis.byteOffset += byteLength;\n\n\t\tjson.bufferViews.push( bufferViewDef );\n\n\t\t// @TODO Merge bufferViews where possible.\n\t\tconst output = {\n\n\t\t\tid: json.bufferViews.length - 1,\n\t\t\tbyteLength: 0\n\n\t\t};\n\n\t\treturn output;\n\n\t}\n\n\t/**\n\t * Process and generate a BufferView from an image Blob.\n\t * @param {Blob} blob\n\t * @return {Promise<Number>} An integer\n\t */\n\tprocessBufferViewImage( blob ) {\n\n\t\tconst writer = this;\n\t\tconst json = writer.json;\n\n\t\tif ( ! json.bufferViews ) json.bufferViews = [];\n\n\t\treturn new Promise( function ( resolve ) {\n\n\t\t\tconst reader = new FileReader();\n\t\t\treader.readAsArrayBuffer( blob );\n\t\t\treader.onloadend = function () {\n\n\t\t\t\tconst buffer = getPaddedArrayBuffer( reader.result );\n\n\t\t\t\tconst bufferViewDef = {\n\t\t\t\t\tbuffer: writer.processBuffer( buffer ),\n\t\t\t\t\tbyteOffset: writer.byteOffset,\n\t\t\t\t\tbyteLength: buffer.byteLength\n\t\t\t\t};\n\n\t\t\t\twriter.byteOffset += buffer.byteLength;\n\t\t\t\tresolve( json.bufferViews.push( bufferViewDef ) - 1 );\n\n\t\t\t};\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Process attribute to generate an accessor\n\t * @param  {BufferAttribute} attribute Attribute to process\n\t * @param  {THREE.BufferGeometry?} geometry Geometry used for truncated draw range\n\t * @param  {Number} [start=0]\n\t * @param  {Number} [count=Infinity]\n\t * @return {Number?} Index of the processed accessor on the \"accessors\" array\n\t */\n\tprocessAccessor( attribute, geometry, start, count ) {\n\n\t\tconst json = this.json;\n\n\t\tconst types = {\n\n\t\t\t1: 'SCALAR',\n\t\t\t2: 'VEC2',\n\t\t\t3: 'VEC3',\n\t\t\t4: 'VEC4',\n\t\t\t9: 'MAT3',\n\t\t\t16: 'MAT4'\n\n\t\t};\n\n\t\tlet componentType;\n\n\t\t// Detect the component type of the attribute array\n\t\tif ( attribute.array.constructor === Float32Array ) {\n\n\t\t\tcomponentType = WEBGL_CONSTANTS.FLOAT;\n\n\t\t} else if ( attribute.array.constructor === Int32Array ) {\n\n\t\t\tcomponentType = WEBGL_CONSTANTS.INT;\n\n\t\t} else if ( attribute.array.constructor === Uint32Array ) {\n\n\t\t\tcomponentType = WEBGL_CONSTANTS.UNSIGNED_INT;\n\n\t\t} else if ( attribute.array.constructor === Int16Array ) {\n\n\t\t\tcomponentType = WEBGL_CONSTANTS.SHORT;\n\n\t\t} else if ( attribute.array.constructor === Uint16Array ) {\n\n\t\t\tcomponentType = WEBGL_CONSTANTS.UNSIGNED_SHORT;\n\n\t\t} else if ( attribute.array.constructor === Int8Array ) {\n\n\t\t\tcomponentType = WEBGL_CONSTANTS.BYTE;\n\n\t\t} else if ( attribute.array.constructor === Uint8Array ) {\n\n\t\t\tcomponentType = WEBGL_CONSTANTS.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.GLTFExporter: Unsupported bufferAttribute component type: ' + attribute.array.constructor.name );\n\n\t\t}\n\n\t\tif ( start === undefined ) start = 0;\n\t\tif ( count === undefined || count === Infinity ) count = attribute.count;\n\n\t\t// Skip creating an accessor if the attribute doesn't have data to export\n\t\tif ( count === 0 ) return null;\n\n\t\tconst minMax = getMinMax( attribute, start, count );\n\t\tlet bufferViewTarget;\n\n\t\t// If geometry isn't provided, don't infer the target usage of the bufferView. For\n\t\t// animation samplers, target must not be set.\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tbufferViewTarget = attribute === geometry.index ? WEBGL_CONSTANTS.ELEMENT_ARRAY_BUFFER : WEBGL_CONSTANTS.ARRAY_BUFFER;\n\n\t\t}\n\n\t\tconst bufferView = this.processBufferView( attribute, componentType, start, count, bufferViewTarget );\n\n\t\tconst accessorDef = {\n\n\t\t\tbufferView: bufferView.id,\n\t\t\tbyteOffset: bufferView.byteOffset,\n\t\t\tcomponentType: componentType,\n\t\t\tcount: count,\n\t\t\tmax: minMax.max,\n\t\t\tmin: minMax.min,\n\t\t\ttype: types[ attribute.itemSize ]\n\n\t\t};\n\n\t\tif ( attribute.normalized === true ) accessorDef.normalized = true;\n\t\tif ( ! json.accessors ) json.accessors = [];\n\n\t\treturn json.accessors.push( accessorDef ) - 1;\n\n\t}\n\n\t/**\n\t * Process image\n\t * @param  {Image} image to process\n\t * @param  {Number} format Identifier of the format (RGBAFormat)\n\t * @param  {Boolean} flipY before writing out the image\n\t * @param  {String} mimeType export format\n\t * @return {Number}     Index of the processed texture in the \"images\" array\n\t */\n\tprocessImage( image, format, flipY, mimeType = 'image/png' ) {\n\n\t\tif ( image !== null ) {\n\n\t\t\tconst writer = this;\n\t\t\tconst cache = writer.cache;\n\t\t\tconst json = writer.json;\n\t\t\tconst options = writer.options;\n\t\t\tconst pending = writer.pending;\n\n\t\t\tif ( ! cache.images.has( image ) ) cache.images.set( image, {} );\n\n\t\t\tconst cachedImages = cache.images.get( image );\n\n\t\t\tconst key = mimeType + ':flipY/' + flipY.toString();\n\n\t\t\tif ( cachedImages[ key ] !== undefined ) return cachedImages[ key ];\n\n\t\t\tif ( ! json.images ) json.images = [];\n\n\t\t\tconst imageDef = { mimeType: mimeType };\n\n\t\t\tconst canvas = getCanvas();\n\n\t\t\tcanvas.width = Math.min( image.width, options.maxTextureSize );\n\t\t\tcanvas.height = Math.min( image.height, options.maxTextureSize );\n\n\t\t\tconst ctx = canvas.getContext( '2d', {\n\t\t\t\twillReadFrequently: true,\n\t\t\t} );\n\n\t\t\tif ( flipY === true ) {\n\n\t\t\t\tctx.translate( 0, canvas.height );\n\t\t\t\tctx.scale( 1, - 1 );\n\n\t\t\t}\n\n\t\t\tif ( image.data !== undefined ) { // THREE.DataTexture\n\n\t\t\t\tif ( format !== RGBAFormat ) {\n\n\t\t\t\t\tconsole.error( 'GLTFExporter: Only RGBAFormat is supported.', format );\n\n\t\t\t\t}\n\n\t\t\t\tif ( image.width > options.maxTextureSize || image.height > options.maxTextureSize ) {\n\n\t\t\t\t\tconsole.warn( 'GLTFExporter: Image size is bigger than maxTextureSize', image );\n\n\t\t\t\t}\n\n\t\t\t\tconst data = new Uint8ClampedArray( image.height * image.width * 4 );\n\n\t\t\t\tfor ( let i = 0; i < data.length; i += 4 ) {\n\n\t\t\t\t\tdata[ i + 0 ] = image.data[ i + 0 ];\n\t\t\t\t\tdata[ i + 1 ] = image.data[ i + 1 ];\n\t\t\t\t\tdata[ i + 2 ] = image.data[ i + 2 ];\n\t\t\t\t\tdata[ i + 3 ] = image.data[ i + 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tctx.putImageData( new ImageData( data, image.width, image.height ), 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ||\n\t\t\t\t\t( typeof OffscreenCanvas !== 'undefined' && image instanceof OffscreenCanvas ) ) {\n\n\t\t\t\t\tctx.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.GLTFExporter: Invalid image type. Use HTMLImageElement, HTMLCanvasElement, ImageBitmap or OffscreenCanvas.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( options.binary === true ) {\n\n\t\t\t\tpending.push(\n\n\t\t\t\t\tgetToBlobPromise( canvas, mimeType )\n\t\t\t\t\t\t.then( blob => writer.processBufferViewImage( blob ) )\n\t\t\t\t\t\t.then( bufferViewIndex => {\n\n\t\t\t\t\t\t\timageDef.bufferView = bufferViewIndex;\n\n\t\t\t\t\t\t} )\n\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tif ( canvas.toDataURL !== undefined ) {\n\n\t\t\t\t\timageDef.uri = canvas.toDataURL( mimeType );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpending.push(\n\n\t\t\t\t\t\tgetToBlobPromise( canvas, mimeType )\n\t\t\t\t\t\t\t.then( blob => new FileReader().readAsDataURL( blob ) )\n\t\t\t\t\t\t\t.then( dataURL => {\n\n\t\t\t\t\t\t\t\timageDef.uri = dataURL;\n\n\t\t\t\t\t\t\t} )\n\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst index = json.images.push( imageDef ) - 1;\n\t\t\tcachedImages[ key ] = index;\n\t\t\treturn index;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.GLTFExporter: No valid image data found. Unable to process texture.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Process sampler\n\t * @param  {Texture} map Texture to process\n\t * @return {Number}      Index of the processed texture in the \"samplers\" array\n\t */\n\tprocessSampler( map ) {\n\n\t\tconst json = this.json;\n\n\t\tif ( ! json.samplers ) json.samplers = [];\n\n\t\tconst samplerDef = {\n\t\t\tmagFilter: THREE_TO_WEBGL[ map.magFilter ],\n\t\t\tminFilter: THREE_TO_WEBGL[ map.minFilter ],\n\t\t\twrapS: THREE_TO_WEBGL[ map.wrapS ],\n\t\t\twrapT: THREE_TO_WEBGL[ map.wrapT ]\n\t\t};\n\n\t\treturn json.samplers.push( samplerDef ) - 1;\n\n\t}\n\n\t/**\n\t * Process texture\n\t * @param  {Texture} map Map to process\n\t * @return {Promise<Number>} Index of the processed texture in the \"textures\" array\n\t */\n\tasync processTextureAsync( map ) {\n\n\t\tconst writer = this;\n\t\tconst options = writer.options;\n\t\tconst cache = this.cache;\n\t\tconst json = this.json;\n\n\t\tif ( cache.textures.has( map ) ) return cache.textures.get( map );\n\n\t\tif ( ! json.textures ) json.textures = [];\n\n\t\t// make non-readable textures (e.g. CompressedTexture) readable by blitting them into a new texture\n\t\tif ( map instanceof CompressedTexture ) {\n\n\t\t\tmap = await this.decompressTextureAsync( map, options.maxTextureSize );\n\n\t\t}\n\n\t\tlet mimeType = map.userData.mimeType;\n\n\t\tif ( mimeType === 'image/webp' ) mimeType = 'image/png';\n\n\t\tconst textureDef = {\n\t\t\tsampler: this.processSampler( map ),\n\t\t\tsource: this.processImage( map.image, map.format, map.flipY, mimeType )\n\t\t};\n\n\t\tif ( map.name ) textureDef.name = map.name;\n\n\t\tawait this._invokeAllAsync( async function ( ext ) {\n\n\t\t\text.writeTexture && await ext.writeTexture( map, textureDef );\n\n\t\t} );\n\n\t\tconst index = json.textures.push( textureDef ) - 1;\n\t\tcache.textures.set( map, index );\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Process material\n\t * @param  {THREE.Material} material Material to process\n\t * @return {Promise<Number|null>} Index of the processed material in the \"materials\" array\n\t */\n\tasync processMaterialAsync( material ) {\n\n\t\tconst cache = this.cache;\n\t\tconst json = this.json;\n\n\t\tif ( cache.materials.has( material ) ) return cache.materials.get( material );\n\n\t\tif ( material.isShaderMaterial ) {\n\n\t\t\tconsole.warn( 'GLTFExporter: THREE.ShaderMaterial not supported.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( ! json.materials ) json.materials = [];\n\n\t\t// @QUESTION Should we avoid including any attribute that has the default value?\n\t\tconst materialDef = {\tpbrMetallicRoughness: {} };\n\n\t\tif ( material.isMeshStandardMaterial !== true && material.isMeshBasicMaterial !== true ) {\n\n\t\t\tconsole.warn( 'GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.' );\n\n\t\t}\n\n\t\t// pbrMetallicRoughness.baseColorFactor\n\t\tconst color = material.color.toArray().concat( [ material.opacity ] );\n\n\t\tif ( ! equalArray( color, [ 1, 1, 1, 1 ] ) ) {\n\n\t\t\tmaterialDef.pbrMetallicRoughness.baseColorFactor = color;\n\n\t\t}\n\n\t\tif ( material.isMeshStandardMaterial ) {\n\n\t\t\tmaterialDef.pbrMetallicRoughness.metallicFactor = material.metalness;\n\t\t\tmaterialDef.pbrMetallicRoughness.roughnessFactor = material.roughness;\n\n\t\t} else {\n\n\t\t\tmaterialDef.pbrMetallicRoughness.metallicFactor = 0;\n\t\t\tmaterialDef.pbrMetallicRoughness.roughnessFactor = 1;\n\n\t\t}\n\n\t\t// pbrMetallicRoughness.metallicRoughnessTexture\n\t\tif ( material.metalnessMap || material.roughnessMap ) {\n\n\t\t\tconst metalRoughTexture = await this.buildMetalRoughTextureAsync( material.metalnessMap, material.roughnessMap );\n\n\t\t\tconst metalRoughMapDef = {\n\t\t\t\tindex: await this.processTextureAsync( metalRoughTexture ),\n\t\t\t\ttexCoord: metalRoughTexture.channel\n\t\t\t};\n\t\t\tthis.applyTextureTransform( metalRoughMapDef, metalRoughTexture );\n\t\t\tmaterialDef.pbrMetallicRoughness.metallicRoughnessTexture = metalRoughMapDef;\n\n\t\t}\n\n\t\t// pbrMetallicRoughness.baseColorTexture\n\t\tif ( material.map ) {\n\n\t\t\tconst baseColorMapDef = {\n\t\t\t\tindex: await this.processTextureAsync( material.map ),\n\t\t\t\ttexCoord: material.map.channel\n\t\t\t};\n\t\t\tthis.applyTextureTransform( baseColorMapDef, material.map );\n\t\t\tmaterialDef.pbrMetallicRoughness.baseColorTexture = baseColorMapDef;\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tconst emissive = material.emissive;\n\t\t\tconst maxEmissiveComponent = Math.max( emissive.r, emissive.g, emissive.b );\n\n\t\t\tif ( maxEmissiveComponent > 0 ) {\n\n\t\t\t\tmaterialDef.emissiveFactor = material.emissive.toArray();\n\n\t\t\t}\n\n\t\t\t// emissiveTexture\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tconst emissiveMapDef = {\n\t\t\t\t\tindex: await this.processTextureAsync( material.emissiveMap ),\n\t\t\t\t\ttexCoord: material.emissiveMap.channel\n\t\t\t\t};\n\t\t\t\tthis.applyTextureTransform( emissiveMapDef, material.emissiveMap );\n\t\t\t\tmaterialDef.emissiveTexture = emissiveMapDef;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// normalTexture\n\t\tif ( material.normalMap ) {\n\n\t\t\tconst normalMapDef = {\n\t\t\t\tindex: await this.processTextureAsync( material.normalMap ),\n\t\t\t\ttexCoord: material.normalMap.channel\n\t\t\t};\n\n\t\t\tif ( material.normalScale && material.normalScale.x !== 1 ) {\n\n\t\t\t\t// glTF normal scale is univariate. Ignore `y`, which may be flipped.\n\t\t\t\t// Context: https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\t\t\tnormalMapDef.scale = material.normalScale.x;\n\n\t\t\t}\n\n\t\t\tthis.applyTextureTransform( normalMapDef, material.normalMap );\n\t\t\tmaterialDef.normalTexture = normalMapDef;\n\n\t\t}\n\n\t\t// occlusionTexture\n\t\tif ( material.aoMap ) {\n\n\t\t\tconst occlusionMapDef = {\n\t\t\t\tindex: await this.processTextureAsync( material.aoMap ),\n\t\t\t\ttexCoord: material.aoMap.channel\n\t\t\t};\n\n\t\t\tif ( material.aoMapIntensity !== 1.0 ) {\n\n\t\t\t\tocclusionMapDef.strength = material.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\tthis.applyTextureTransform( occlusionMapDef, material.aoMap );\n\t\t\tmaterialDef.occlusionTexture = occlusionMapDef;\n\n\t\t}\n\n\t\t// alphaMode\n\t\tif ( material.transparent ) {\n\n\t\t\tmaterialDef.alphaMode = 'BLEND';\n\n\t\t} else {\n\n\t\t\tif ( material.alphaTest > 0.0 ) {\n\n\t\t\t\tmaterialDef.alphaMode = 'MASK';\n\t\t\t\tmaterialDef.alphaCutoff = material.alphaTest;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// doubleSided\n\t\tif ( material.side === DoubleSide ) materialDef.doubleSided = true;\n\t\tif ( material.name !== '' ) materialDef.name = material.name;\n\n\t\tthis.serializeUserData( material, materialDef );\n\n\t\tawait this._invokeAllAsync( async function ( ext ) {\n\n\t\t\text.writeMaterialAsync && await ext.writeMaterialAsync( material, materialDef );\n\n\t\t} );\n\n\t\tconst index = json.materials.push( materialDef ) - 1;\n\t\tcache.materials.set( material, index );\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Process mesh\n\t * @param  {THREE.Mesh} mesh Mesh to process\n\t * @return {Promise<Number|null>} Index of the processed mesh in the \"meshes\" array\n\t */\n\tasync processMeshAsync( mesh ) {\n\n\t\tconst cache = this.cache;\n\t\tconst json = this.json;\n\n\t\tconst meshCacheKeyParts = [ mesh.geometry.uuid ];\n\n\t\tif ( Array.isArray( mesh.material ) ) {\n\n\t\t\tfor ( let i = 0, l = mesh.material.length; i < l; i ++ ) {\n\n\t\t\t\tmeshCacheKeyParts.push( mesh.material[ i ].uuid\t);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tmeshCacheKeyParts.push( mesh.material.uuid );\n\n\t\t}\n\n\t\tconst meshCacheKey = meshCacheKeyParts.join( ':' );\n\n\t\tif ( cache.meshes.has( meshCacheKey ) ) return cache.meshes.get( meshCacheKey );\n\n\t\tconst geometry = mesh.geometry;\n\n\t\tlet mode;\n\n\t\t// Use the correct mode\n\t\tif ( mesh.isLineSegments ) {\n\n\t\t\tmode = WEBGL_CONSTANTS.LINES;\n\n\t\t} else if ( mesh.isLineLoop ) {\n\n\t\t\tmode = WEBGL_CONSTANTS.LINE_LOOP;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tmode = WEBGL_CONSTANTS.LINE_STRIP;\n\n\t\t} else if ( mesh.isPoints ) {\n\n\t\t\tmode = WEBGL_CONSTANTS.POINTS;\n\n\t\t} else {\n\n\t\t\tmode = mesh.material.wireframe ? WEBGL_CONSTANTS.LINES : WEBGL_CONSTANTS.TRIANGLES;\n\n\t\t}\n\n\t\tconst meshDef = {};\n\t\tconst attributes = {};\n\t\tconst primitives = [];\n\t\tconst targets = [];\n\n\t\t// Conversion between attributes names in threejs and gltf spec\n\t\tconst nameConversion = {\n\t\t\tuv: 'TEXCOORD_0',\n\t\t\tuv1: 'TEXCOORD_1',\n\t\t\tuv2: 'TEXCOORD_2',\n\t\t\tuv3: 'TEXCOORD_3',\n\t\t\tcolor: 'COLOR_0',\n\t\t\tskinWeight: 'WEIGHTS_0',\n\t\t\tskinIndex: 'JOINTS_0'\n\t\t};\n\n\t\tconst originalNormal = geometry.getAttribute( 'normal' );\n\n\t\tif ( originalNormal !== undefined && ! this.isNormalizedNormalAttribute( originalNormal ) ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one.' );\n\n\t\t\tgeometry.setAttribute( 'normal', this.createNormalizedNormalAttribute( originalNormal ) );\n\n\t\t}\n\n\t\t// @QUESTION Detect if .vertexColors = true?\n\t\t// For every attribute create an accessor\n\t\tlet modifiedAttribute = null;\n\n\t\tfor ( let attributeName in geometry.attributes ) {\n\n\t\t\t// Ignore morph target attributes, which are exported later.\n\t\t\tif ( attributeName.slice( 0, 5 ) === 'morph' ) continue;\n\n\t\t\tconst attribute = geometry.attributes[ attributeName ];\n\t\t\tattributeName = nameConversion[ attributeName ] || attributeName.toUpperCase();\n\n\t\t\t// Prefix all geometry attributes except the ones specifically\n\t\t\t// listed in the spec; non-spec attributes are considered custom.\n\t\t\tconst validVertexAttributes =\n\t\t\t\t\t/^(POSITION|NORMAL|TANGENT|TEXCOORD_\\d+|COLOR_\\d+|JOINTS_\\d+|WEIGHTS_\\d+)$/;\n\n\t\t\tif ( ! validVertexAttributes.test( attributeName ) ) attributeName = '_' + attributeName;\n\n\t\t\tif ( cache.attributes.has( this.getUID( attribute ) ) ) {\n\n\t\t\t\tattributes[ attributeName ] = cache.attributes.get( this.getUID( attribute ) );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// Enforce glTF vertex attribute requirements:\n\t\t\t// - JOINTS_0 must be UNSIGNED_BYTE or UNSIGNED_SHORT\n\t\t\t// - Only custom attributes may be INT or UNSIGNED_INT\n\t\t\tmodifiedAttribute = null;\n\t\t\tconst array = attribute.array;\n\n\t\t\tif ( attributeName === 'JOINTS_0' &&\n\t\t\t\t! ( array instanceof Uint16Array ) &&\n\t\t\t\t! ( array instanceof Uint8Array ) ) {\n\n\t\t\t\tconsole.warn( 'GLTFExporter: Attribute \"skinIndex\" converted to type UNSIGNED_SHORT.' );\n\t\t\t\tmodifiedAttribute = new BufferAttribute( new Uint16Array( array ), attribute.itemSize, attribute.normalized );\n\n\t\t\t} else if ( ( array instanceof Uint32Array || array instanceof Int32Array ) && ! attributeName.startsWith( '_' ) ) {\n\n\t\t\t\tconsole.warn( `GLTFExporter: Attribute \"${ attributeName }\" converted to type FLOAT.` );\n\t\t\t\tmodifiedAttribute = GLTFExporter.Utils.toFloat32BufferAttribute( attribute );\n\n\t\t\t}\n\n\t\t\tconst accessor = this.processAccessor( modifiedAttribute || attribute, geometry );\n\n\t\t\tif ( accessor !== null ) {\n\n\t\t\t\tif ( ! attributeName.startsWith( '_' ) ) {\n\n\t\t\t\t\tthis.detectMeshQuantization( attributeName, attribute );\n\n\t\t\t\t}\n\n\t\t\t\tattributes[ attributeName ] = accessor;\n\t\t\t\tcache.attributes.set( this.getUID( attribute ), accessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( originalNormal !== undefined ) geometry.setAttribute( 'normal', originalNormal );\n\n\t\t// Skip if no exportable attributes found\n\t\tif ( Object.keys( attributes ).length === 0 ) return null;\n\n\t\t// Morph targets\n\t\tif ( mesh.morphTargetInfluences !== undefined && mesh.morphTargetInfluences.length > 0 ) {\n\n\t\t\tconst weights = [];\n\t\t\tconst targetNames = [];\n\t\t\tconst reverseDictionary = {};\n\n\t\t\tif ( mesh.morphTargetDictionary !== undefined ) {\n\n\t\t\t\tfor ( const key in mesh.morphTargetDictionary ) {\n\n\t\t\t\t\treverseDictionary[ mesh.morphTargetDictionary[ key ] ] = key;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < mesh.morphTargetInfluences.length; ++ i ) {\n\n\t\t\t\tconst target = {};\n\t\t\t\tlet warned = false;\n\n\t\t\t\tfor ( const attributeName in geometry.morphAttributes ) {\n\n\t\t\t\t\t// glTF 2.0 morph supports only POSITION/NORMAL/TANGENT.\n\t\t\t\t\t// Three.js doesn't support TANGENT yet.\n\n\t\t\t\t\tif ( attributeName !== 'position' && attributeName !== 'normal' ) {\n\n\t\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'GLTFExporter: Only POSITION and NORMAL morph are supported.' );\n\t\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst attribute = geometry.morphAttributes[ attributeName ][ i ];\n\t\t\t\t\tconst gltfAttributeName = attributeName.toUpperCase();\n\n\t\t\t\t\t// Three.js morph attribute has absolute values while the one of glTF has relative values.\n\t\t\t\t\t//\n\t\t\t\t\t// glTF 2.0 Specification:\n\t\t\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#morph-targets\n\n\t\t\t\t\tconst baseAttribute = geometry.attributes[ attributeName ];\n\n\t\t\t\t\tif ( cache.attributes.has( this.getUID( attribute, true ) ) ) {\n\n\t\t\t\t\t\ttarget[ gltfAttributeName ] = cache.attributes.get( this.getUID( attribute, true ) );\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Clones attribute not to override\n\t\t\t\t\tconst relativeAttribute = attribute.clone();\n\n\t\t\t\t\tif ( ! geometry.morphTargetsRelative ) {\n\n\t\t\t\t\t\tfor ( let j = 0, jl = attribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tfor ( let a = 0; a < attribute.itemSize; a ++ ) {\n\n\t\t\t\t\t\t\t\tif ( a === 0 ) relativeAttribute.setX( j, attribute.getX( j ) - baseAttribute.getX( j ) );\n\t\t\t\t\t\t\t\tif ( a === 1 ) relativeAttribute.setY( j, attribute.getY( j ) - baseAttribute.getY( j ) );\n\t\t\t\t\t\t\t\tif ( a === 2 ) relativeAttribute.setZ( j, attribute.getZ( j ) - baseAttribute.getZ( j ) );\n\t\t\t\t\t\t\t\tif ( a === 3 ) relativeAttribute.setW( j, attribute.getW( j ) - baseAttribute.getW( j ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttarget[ gltfAttributeName ] = this.processAccessor( relativeAttribute, geometry );\n\t\t\t\t\tcache.attributes.set( this.getUID( baseAttribute, true ), target[ gltfAttributeName ] );\n\n\t\t\t\t}\n\n\t\t\t\ttargets.push( target );\n\n\t\t\t\tweights.push( mesh.morphTargetInfluences[ i ] );\n\n\t\t\t\tif ( mesh.morphTargetDictionary !== undefined ) targetNames.push( reverseDictionary[ i ] );\n\n\t\t\t}\n\n\t\t\tmeshDef.weights = weights;\n\n\t\t\tif ( targetNames.length > 0 ) {\n\n\t\t\t\tmeshDef.extras = {};\n\t\t\t\tmeshDef.extras.targetNames = targetNames;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst isMultiMaterial = Array.isArray( mesh.material );\n\n\t\tif ( isMultiMaterial && geometry.groups.length === 0 ) return null;\n\n\t\tlet didForceIndices = false;\n\n\t\tif ( isMultiMaterial && geometry.index === null ) {\n\n\t\t\tconst indices = [];\n\n\t\t\tfor ( let i = 0, il = geometry.attributes.position.count; i < il; i ++ ) {\n\n\t\t\t\tindices[ i ] = i;\n\n\t\t\t}\n\n\t\t\tgeometry.setIndex( indices );\n\n\t\t\tdidForceIndices = true;\n\n\t\t}\n\n\t\tconst materials = isMultiMaterial ? mesh.material : [ mesh.material ];\n\t\tconst groups = isMultiMaterial ? geometry.groups : [ { materialIndex: 0, start: undefined, count: undefined } ];\n\n\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\tconst primitive = {\n\t\t\t\tmode: mode,\n\t\t\t\tattributes: attributes,\n\t\t\t};\n\n\t\t\tthis.serializeUserData( geometry, primitive );\n\n\t\t\tif ( targets.length > 0 ) primitive.targets = targets;\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\tlet cacheKey = this.getUID( geometry.index );\n\n\t\t\t\tif ( groups[ i ].start !== undefined || groups[ i ].count !== undefined ) {\n\n\t\t\t\t\tcacheKey += ':' + groups[ i ].start + ':' + groups[ i ].count;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cache.attributes.has( cacheKey ) ) {\n\n\t\t\t\t\tprimitive.indices = cache.attributes.get( cacheKey );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tprimitive.indices = this.processAccessor( geometry.index, geometry, groups[ i ].start, groups[ i ].count );\n\t\t\t\t\tcache.attributes.set( cacheKey, primitive.indices );\n\n\t\t\t\t}\n\n\t\t\t\tif ( primitive.indices === null ) delete primitive.indices;\n\n\t\t\t}\n\n\t\t\tconst material = await this.processMaterialAsync( materials[ groups[ i ].materialIndex ] );\n\n\t\t\tif ( material !== null ) primitive.material = material;\n\n\t\t\tprimitives.push( primitive );\n\n\t\t}\n\n\t\tif ( didForceIndices === true ) {\n\n\t\t\tgeometry.setIndex( null );\n\n\t\t}\n\n\t\tmeshDef.primitives = primitives;\n\n\t\tif ( ! json.meshes ) json.meshes = [];\n\n\t\tawait this._invokeAllAsync( function ( ext ) {\n\n\t\t\text.writeMesh && ext.writeMesh( mesh, meshDef );\n\n\t\t} );\n\n\t\tconst index = json.meshes.push( meshDef ) - 1;\n\t\tcache.meshes.set( meshCacheKey, index );\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * If a vertex attribute with a\n\t * [non-standard data type](https://registry.khronos.org/glTF/specs/2.0/glTF-2.0.html#meshes-overview)\n\t * is used, it is checked whether it is a valid data type according to the\n\t * [KHR_mesh_quantization](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_mesh_quantization/README.md)\n\t * extension.\n\t * In this case the extension is automatically added to the list of used extensions.\n\t *\n\t * @param {string} attributeName\n\t * @param {THREE.BufferAttribute} attribute\n\t */\n\tdetectMeshQuantization( attributeName, attribute ) {\n\n\t\tif ( this.extensionsUsed[ KHR_MESH_QUANTIZATION ] ) return;\n\n\t\tlet attrType = undefined;\n\n\t\tswitch ( attribute.array.constructor ) {\n\n\t\t\tcase Int8Array:\n\n\t\t\t\tattrType = 'byte';\n\n\t\t\t\tbreak;\n\n\t\t\tcase Uint8Array:\n\n\t\t\t\tattrType = 'unsigned byte';\n\n\t\t\t\tbreak;\n\n\t\t\tcase Int16Array:\n\n\t\t\t\tattrType = 'short';\n\n\t\t\t\tbreak;\n\n\t\t\tcase Uint16Array:\n\n\t\t\t\tattrType = 'unsigned short';\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.normalized ) attrType += ' normalized';\n\n\t\tconst attrNamePrefix = attributeName.split( '_', 1 )[ 0 ];\n\n\t\tif ( KHR_mesh_quantization_ExtraAttrTypes[ attrNamePrefix ] && KHR_mesh_quantization_ExtraAttrTypes[ attrNamePrefix ].includes( attrType ) ) {\n\n\t\t\tthis.extensionsUsed[ KHR_MESH_QUANTIZATION ] = true;\n\t\t\tthis.extensionsRequired[ KHR_MESH_QUANTIZATION ] = true;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Process camera\n\t * @param  {THREE.Camera} camera Camera to process\n\t * @return {Number} Index of the processed mesh in the \"camera\" array\n\t */\n\tprocessCamera( camera ) {\n\n\t\tconst json = this.json;\n\n\t\tif ( ! json.cameras ) json.cameras = [];\n\n\t\tconst isOrtho = camera.isOrthographicCamera;\n\n\t\tconst cameraDef = {\n\t\t\ttype: isOrtho ? 'orthographic' : 'perspective'\n\t\t};\n\n\t\tif ( isOrtho ) {\n\n\t\t\tcameraDef.orthographic = {\n\t\t\t\txmag: camera.right * 2,\n\t\t\t\tymag: camera.top * 2,\n\t\t\t\tzfar: camera.far <= 0 ? 0.001 : camera.far,\n\t\t\t\tznear: camera.near < 0 ? 0 : camera.near\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tcameraDef.perspective = {\n\t\t\t\taspectRatio: camera.aspect,\n\t\t\t\tyfov: MathUtils.degToRad( camera.fov ),\n\t\t\t\tzfar: camera.far <= 0 ? 0.001 : camera.far,\n\t\t\t\tznear: camera.near < 0 ? 0 : camera.near\n\t\t\t};\n\n\t\t}\n\n\t\t// Question: Is saving \"type\" as name intentional?\n\t\tif ( camera.name !== '' ) cameraDef.name = camera.type;\n\n\t\treturn json.cameras.push( cameraDef ) - 1;\n\n\t}\n\n\t/**\n\t * Creates glTF animation entry from AnimationClip object.\n\t *\n\t * Status:\n\t * - Only properties listed in PATH_PROPERTIES may be animated.\n\t *\n\t * @param {THREE.AnimationClip} clip\n\t * @param {THREE.Object3D} root\n\t * @return {number|null}\n\t */\n\tprocessAnimation( clip, root ) {\n\n\t\tconst json = this.json;\n\t\tconst nodeMap = this.nodeMap;\n\n\t\tif ( ! json.animations ) json.animations = [];\n\n\t\tclip = GLTFExporter.Utils.mergeMorphTargetTracks( clip.clone(), root );\n\n\t\tconst tracks = clip.tracks;\n\t\tconst channels = [];\n\t\tconst samplers = [];\n\n\t\tfor ( let i = 0; i < tracks.length; ++ i ) {\n\n\t\t\tconst track = tracks[ i ];\n\t\t\tconst trackBinding = PropertyBinding.parseTrackName( track.name );\n\t\t\tlet trackNode = PropertyBinding.findNode( root, trackBinding.nodeName );\n\t\t\tconst trackProperty = PATH_PROPERTIES[ trackBinding.propertyName ];\n\n\t\t\tif ( trackBinding.objectName === 'bones' ) {\n\n\t\t\t\tif ( trackNode.isSkinnedMesh === true ) {\n\n\t\t\t\t\ttrackNode = trackNode.skeleton.getBoneByName( trackBinding.objectIndex );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttrackNode = undefined;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ! trackNode || ! trackProperty ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Could not export animation track \"%s\".', track.name );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst inputItemSize = 1;\n\t\t\tlet outputItemSize = track.values.length / track.times.length;\n\n\t\t\tif ( trackProperty === PATH_PROPERTIES.morphTargetInfluences ) {\n\n\t\t\t\toutputItemSize /= trackNode.morphTargetInfluences.length;\n\n\t\t\t}\n\n\t\t\tlet interpolation;\n\n\t\t\t// @TODO export CubicInterpolant(InterpolateSmooth) as CUBICSPLINE\n\n\t\t\t// Detecting glTF cubic spline interpolant by checking factory method's special property\n\t\t\t// GLTFCubicSplineInterpolant is a custom interpolant and track doesn't return\n\t\t\t// valid value from .getInterpolation().\n\t\t\tif ( track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline === true ) {\n\n\t\t\t\tinterpolation = 'CUBICSPLINE';\n\n\t\t\t\t// itemSize of CUBICSPLINE keyframe is 9\n\t\t\t\t// (VEC3 * 3: inTangent, splineVertex, and outTangent)\n\t\t\t\t// but needs to be stored as VEC3 so dividing by 3 here.\n\t\t\t\toutputItemSize /= 3;\n\n\t\t\t} else if ( track.getInterpolation() === InterpolateDiscrete ) {\n\n\t\t\t\tinterpolation = 'STEP';\n\n\t\t\t} else {\n\n\t\t\t\tinterpolation = 'LINEAR';\n\n\t\t\t}\n\n\t\t\tsamplers.push( {\n\t\t\t\tinput: this.processAccessor( new BufferAttribute( track.times, inputItemSize ) ),\n\t\t\t\toutput: this.processAccessor( new BufferAttribute( track.values, outputItemSize ) ),\n\t\t\t\tinterpolation: interpolation\n\t\t\t} );\n\n\t\t\tchannels.push( {\n\t\t\t\tsampler: samplers.length - 1,\n\t\t\t\ttarget: {\n\t\t\t\t\tnode: nodeMap.get( trackNode ),\n\t\t\t\t\tpath: trackProperty\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t\tjson.animations.push( {\n\t\t\tname: clip.name || 'clip_' + json.animations.length,\n\t\t\tsamplers: samplers,\n\t\t\tchannels: channels\n\t\t} );\n\n\t\treturn json.animations.length - 1;\n\n\t}\n\n\t/**\n\t * @param {THREE.Object3D} object\n\t * @return {number|null}\n\t */\n\t processSkin( object ) {\n\n\t\tconst json = this.json;\n\t\tconst nodeMap = this.nodeMap;\n\n\t\tconst node = json.nodes[ nodeMap.get( object ) ];\n\n\t\tconst skeleton = object.skeleton;\n\n\t\tif ( skeleton === undefined ) return null;\n\n\t\tconst rootJoint = object.skeleton.bones[ 0 ];\n\n\t\tif ( rootJoint === undefined ) return null;\n\n\t\tconst joints = [];\n\t\tconst inverseBindMatrices = new Float32Array( skeleton.bones.length * 16 );\n\t\tconst temporaryBoneInverse = new Matrix4();\n\n\t\tfor ( let i = 0; i < skeleton.bones.length; ++ i ) {\n\n\t\t\tjoints.push( nodeMap.get( skeleton.bones[ i ] ) );\n\t\t\ttemporaryBoneInverse.copy( skeleton.boneInverses[ i ] );\n\t\t\ttemporaryBoneInverse.multiply( object.bindMatrix ).toArray( inverseBindMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( json.skins === undefined ) json.skins = [];\n\n\t\tjson.skins.push( {\n\t\t\tinverseBindMatrices: this.processAccessor( new BufferAttribute( inverseBindMatrices, 16 ) ),\n\t\t\tjoints: joints,\n\t\t\tskeleton: nodeMap.get( rootJoint )\n\t\t} );\n\n\t\tconst skinIndex = node.skin = json.skins.length - 1;\n\n\t\treturn skinIndex;\n\n\t}\n\n\t/**\n\t * Process Object3D node\n\t * @param  {THREE.Object3D} object Object3D to processNodeAsync\n\t * @return {Promise<Number>} Index of the node in the nodes list\n\t */\n\tasync processNodeAsync( object ) {\n\n\t\tconst json = this.json;\n\t\tconst options = this.options;\n\t\tconst nodeMap = this.nodeMap;\n\n\t\tif ( ! json.nodes ) json.nodes = [];\n\n\t\tconst nodeDef = {};\n\n\t\tif ( options.trs ) {\n\n\t\t\tconst rotation = object.quaternion.toArray();\n\t\t\tconst position = object.position.toArray();\n\t\t\tconst scale = object.scale.toArray();\n\n\t\t\tif ( ! equalArray( rotation, [ 0, 0, 0, 1 ] ) ) {\n\n\t\t\t\tnodeDef.rotation = rotation;\n\n\t\t\t}\n\n\t\t\tif ( ! equalArray( position, [ 0, 0, 0 ] ) ) {\n\n\t\t\t\tnodeDef.translation = position;\n\n\t\t\t}\n\n\t\t\tif ( ! equalArray( scale, [ 1, 1, 1 ] ) ) {\n\n\t\t\t\tnodeDef.scale = scale;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( object.matrixAutoUpdate ) {\n\n\t\t\t\tobject.updateMatrix();\n\n\t\t\t}\n\n\t\t\tif ( isIdentityMatrix( object.matrix ) === false ) {\n\n\t\t\t\tnodeDef.matrix = object.matrix.elements;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// We don't export empty strings name because it represents no-name in Three.js.\n\t\tif ( object.name !== '' ) nodeDef.name = String( object.name );\n\n\t\tthis.serializeUserData( object, nodeDef );\n\n\t\tif ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\tconst meshIndex = await this.processMeshAsync( object );\n\n\t\t\tif ( meshIndex !== null ) nodeDef.mesh = meshIndex;\n\n\t\t} else if ( object.isCamera ) {\n\n\t\t\tnodeDef.camera = this.processCamera( object );\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) this.skins.push( object );\n\n\t\tif ( object.children.length > 0 ) {\n\n\t\t\tconst children = [];\n\n\t\t\tfor ( let i = 0, l = object.children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = object.children[ i ];\n\n\t\t\t\tif ( child.visible || options.onlyVisible === false ) {\n\n\t\t\t\t\tconst nodeIndex = await this.processNodeAsync( child );\n\n\t\t\t\t\tif ( nodeIndex !== null ) children.push( nodeIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( children.length > 0 ) nodeDef.children = children;\n\n\t\t}\n\n\t\tawait this._invokeAllAsync( function ( ext ) {\n\n\t\t\text.writeNode && ext.writeNode( object, nodeDef );\n\n\t\t} );\n\n\t\tconst nodeIndex = json.nodes.push( nodeDef ) - 1;\n\t\tnodeMap.set( object, nodeIndex );\n\t\treturn nodeIndex;\n\n\t}\n\n\t/**\n\t * Process Scene\n\t * @param  {Scene} scene Scene to process\n\t */\n\tasync processSceneAsync( scene ) {\n\n\t\tconst json = this.json;\n\t\tconst options = this.options;\n\n\t\tif ( ! json.scenes ) {\n\n\t\t\tjson.scenes = [];\n\t\t\tjson.scene = 0;\n\n\t\t}\n\n\t\tconst sceneDef = {};\n\n\t\tif ( scene.name !== '' ) sceneDef.name = scene.name;\n\n\t\tjson.scenes.push( sceneDef );\n\n\t\tconst nodes = [];\n\n\t\tfor ( let i = 0, l = scene.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = scene.children[ i ];\n\n\t\t\tif ( child.visible || options.onlyVisible === false ) {\n\n\t\t\t\tconst nodeIndex = await this.processNodeAsync( child );\n\n\t\t\t\tif ( nodeIndex !== null ) nodes.push( nodeIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( nodes.length > 0 ) sceneDef.nodes = nodes;\n\n\t\tthis.serializeUserData( scene, sceneDef );\n\n\t}\n\n\t/**\n\t * Creates a Scene to hold a list of objects and parse it\n\t * @param  {Array<THREE.Object3D>} objects List of objects to process\n\t */\n\tasync processObjectsAsync( objects ) {\n\n\t\tconst scene = new Scene();\n\t\tscene.name = 'AuxScene';\n\n\t\tfor ( let i = 0; i < objects.length; i ++ ) {\n\n\t\t\t// We push directly to children instead of calling `add` to prevent\n\t\t\t// modify the .parent and break its original scene and hierarchy\n\t\t\tscene.children.push( objects[ i ] );\n\n\t\t}\n\n\t\tawait this.processSceneAsync( scene );\n\n\t}\n\n\t/**\n\t * @param {THREE.Object3D|Array<THREE.Object3D>} input\n\t */\n\tasync processInputAsync( input ) {\n\n\t\tconst options = this.options;\n\n\t\tinput = input instanceof Array ? input : [ input ];\n\n\t\tawait this._invokeAllAsync( function ( ext ) {\n\n\t\t\text.beforeParse && ext.beforeParse( input );\n\n\t\t} );\n\n\t\tconst objectsWithoutScene = [];\n\n\t\tfor ( let i = 0; i < input.length; i ++ ) {\n\n\t\t\tif ( input[ i ] instanceof Scene ) {\n\n\t\t\t\tawait this.processSceneAsync( input[ i ] );\n\n\t\t\t} else {\n\n\t\t\t\tobjectsWithoutScene.push( input[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( objectsWithoutScene.length > 0 ) {\n\n\t\t\tawait this.processObjectsAsync( objectsWithoutScene );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < this.skins.length; ++ i ) {\n\n\t\t\tthis.processSkin( this.skins[ i ] );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < options.animations.length; ++ i ) {\n\n\t\t\tthis.processAnimation( options.animations[ i ], input[ 0 ] );\n\n\t\t}\n\n\t\tawait this._invokeAllAsync( function ( ext ) {\n\n\t\t\text.afterParse && ext.afterParse( input );\n\n\t\t} );\n\n\t}\n\n\tasync _invokeAllAsync( func ) {\n\n\t\tfor ( let i = 0, il = this.plugins.length; i < il; i ++ ) {\n\n\t\t\tawait func( this.plugins[ i ] );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Punctual Lights Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n */\nclass GLTFLightExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_lights_punctual';\n\n\t}\n\n\twriteNode( light, nodeDef ) {\n\n\t\tif ( ! light.isLight ) return;\n\n\t\tif ( ! light.isDirectionalLight && ! light.isPointLight && ! light.isSpotLight ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFExporter: Only directional, point, and spot lights are supported.', light );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst writer = this.writer;\n\t\tconst json = writer.json;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst lightDef = {};\n\n\t\tif ( light.name ) lightDef.name = light.name;\n\n\t\tlightDef.color = light.color.toArray();\n\n\t\tlightDef.intensity = light.intensity;\n\n\t\tif ( light.isDirectionalLight ) {\n\n\t\t\tlightDef.type = 'directional';\n\n\t\t} else if ( light.isPointLight ) {\n\n\t\t\tlightDef.type = 'point';\n\n\t\t\tif ( light.distance > 0 ) lightDef.range = light.distance;\n\n\t\t} else if ( light.isSpotLight ) {\n\n\t\t\tlightDef.type = 'spot';\n\n\t\t\tif ( light.distance > 0 ) lightDef.range = light.distance;\n\n\t\t\tlightDef.spot = {};\n\t\t\tlightDef.spot.innerConeAngle = ( 1.0 - light.penumbra ) * light.angle;\n\t\t\tlightDef.spot.outerConeAngle = light.angle;\n\n\t\t}\n\n\t\tif ( light.decay !== undefined && light.decay !== 2 ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFExporter: Light decay may be lost. glTF is physically-based, '\n\t\t\t\t+ 'and expects light.decay=2.' );\n\n\t\t}\n\n\t\tif ( light.target\n\t\t\t\t&& ( light.target.parent !== light\n\t\t\t\t|| light.target.position.x !== 0\n\t\t\t\t|| light.target.position.y !== 0\n\t\t\t\t|| light.target.position.z !== - 1 ) ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFExporter: Light direction may be lost. For best results, '\n\t\t\t\t+ 'make light.target a child of the light with position 0,0,-1.' );\n\n\t\t}\n\n\t\tif ( ! extensionsUsed[ this.name ] ) {\n\n\t\t\tjson.extensions = json.extensions || {};\n\t\t\tjson.extensions[ this.name ] = { lights: [] };\n\t\t\textensionsUsed[ this.name ] = true;\n\n\t\t}\n\n\t\tconst lights = json.extensions[ this.name ].lights;\n\t\tlights.push( lightDef );\n\n\t\tnodeDef.extensions = nodeDef.extensions || {};\n\t\tnodeDef.extensions[ this.name ] = { light: lights.length - 1 };\n\n\t}\n\n}\n\n/**\n * Unlit Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n */\nclass GLTFMaterialsUnlitExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_unlit';\n\n\t}\n\n\tasync writeMaterialAsync( material, materialDef ) {\n\n\t\tif ( ! material.isMeshBasicMaterial ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = {};\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t\tmaterialDef.pbrMetallicRoughness.metallicFactor = 0.0;\n\t\tmaterialDef.pbrMetallicRoughness.roughnessFactor = 0.9;\n\n\t}\n\n}\n\n/**\n * Clearcoat Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n */\nclass GLTFMaterialsClearcoatExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_clearcoat';\n\n\t}\n\n\tasync writeMaterialAsync( material, materialDef ) {\n\n\t\tif ( ! material.isMeshPhysicalMaterial || material.clearcoat === 0 ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\textensionDef.clearcoatFactor = material.clearcoat;\n\n\t\tif ( material.clearcoatMap ) {\n\n\t\t\tconst clearcoatMapDef = {\n\t\t\t\tindex: await writer.processTextureAsync( material.clearcoatMap ),\n\t\t\t\ttexCoord: material.clearcoatMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( clearcoatMapDef, material.clearcoatMap );\n\t\t\textensionDef.clearcoatTexture = clearcoatMapDef;\n\n\t\t}\n\n\t\textensionDef.clearcoatRoughnessFactor = material.clearcoatRoughness;\n\n\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\tconst clearcoatRoughnessMapDef = {\n\t\t\t\tindex: await writer.processTextureAsync( material.clearcoatRoughnessMap ),\n\t\t\t\ttexCoord: material.clearcoatRoughnessMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( clearcoatRoughnessMapDef, material.clearcoatRoughnessMap );\n\t\t\textensionDef.clearcoatRoughnessTexture = clearcoatRoughnessMapDef;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\tconst clearcoatNormalMapDef = {\n\t\t\t\tindex: await writer.processTextureAsync( material.clearcoatNormalMap ),\n\t\t\t\ttexCoord: material.clearcoatNormalMap.channel\n\t\t\t};\n\n\t\t\tif ( material.clearcoatNormalScale.x !== 1 ) clearcoatNormalMapDef.scale = material.clearcoatNormalScale.x;\n\n\t\t\twriter.applyTextureTransform( clearcoatNormalMapDef, material.clearcoatNormalMap );\n\t\t\textensionDef.clearcoatNormalTexture = clearcoatNormalMapDef;\n\n\t\t}\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\n\t}\n\n}\n\n/**\n * Materials dispersion Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_dispersion\n */\nclass GLTFMaterialsDispersionExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_dispersion';\n\n\t}\n\n\tasync writeMaterialAsync( material, materialDef ) {\n\n\t\tif ( ! material.isMeshPhysicalMaterial || material.dispersion === 0 ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\textensionDef.dispersion = material.dispersion;\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * Iridescence Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_iridescence\n */\nclass GLTFMaterialsIridescenceExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_iridescence';\n\n\t}\n\n\tasync writeMaterialAsync( material, materialDef ) {\n\n\t\tif ( ! material.isMeshPhysicalMaterial || material.iridescence === 0 ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\textensionDef.iridescenceFactor = material.iridescence;\n\n\t\tif ( material.iridescenceMap ) {\n\n\t\t\tconst iridescenceMapDef = {\n\t\t\t\tindex: await writer.processTextureAsync( material.iridescenceMap ),\n\t\t\t\ttexCoord: material.iridescenceMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( iridescenceMapDef, material.iridescenceMap );\n\t\t\textensionDef.iridescenceTexture = iridescenceMapDef;\n\n\t\t}\n\n\t\textensionDef.iridescenceIor = material.iridescenceIOR;\n\t\textensionDef.iridescenceThicknessMinimum = material.iridescenceThicknessRange[ 0 ];\n\t\textensionDef.iridescenceThicknessMaximum = material.iridescenceThicknessRange[ 1 ];\n\n\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\tconst iridescenceThicknessMapDef = {\n\t\t\t\tindex: await writer.processTextureAsync( material.iridescenceThicknessMap ),\n\t\t\t\ttexCoord: material.iridescenceThicknessMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( iridescenceThicknessMapDef, material.iridescenceThicknessMap );\n\t\t\textensionDef.iridescenceThicknessTexture = iridescenceThicknessMapDef;\n\n\t\t}\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * Transmission Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_transmission\n */\nclass GLTFMaterialsTransmissionExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_transmission';\n\n\t}\n\n\tasync writeMaterialAsync( material, materialDef ) {\n\n\t\tif ( ! material.isMeshPhysicalMaterial || material.transmission === 0 ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\textensionDef.transmissionFactor = material.transmission;\n\n\t\tif ( material.transmissionMap ) {\n\n\t\t\tconst transmissionMapDef = {\n\t\t\t\tindex: await writer.processTextureAsync( material.transmissionMap ),\n\t\t\t\ttexCoord: material.transmissionMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( transmissionMapDef, material.transmissionMap );\n\t\t\textensionDef.transmissionTexture = transmissionMapDef;\n\n\t\t}\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * Materials Volume Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_volume\n */\nclass GLTFMaterialsVolumeExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_volume';\n\n\t}\n\n\tasync writeMaterialAsync( material, materialDef ) {\n\n\t\tif ( ! material.isMeshPhysicalMaterial || material.transmission === 0 ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\textensionDef.thicknessFactor = material.thickness;\n\n\t\tif ( material.thicknessMap ) {\n\n\t\t\tconst thicknessMapDef = {\n\t\t\t\tindex: await writer.processTextureAsync( material.thicknessMap ),\n\t\t\t\ttexCoord: material.thicknessMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( thicknessMapDef, material.thicknessMap );\n\t\t\textensionDef.thicknessTexture = thicknessMapDef;\n\n\t\t}\n\n\t\tif ( material.attenuationDistance !== Infinity ) {\n\n\t\t\textensionDef.attenuationDistance = material.attenuationDistance;\n\n\t\t}\n\n\t\textensionDef.attenuationColor = material.attenuationColor.toArray();\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * Materials ior Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_ior\n */\nclass GLTFMaterialsIorExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_ior';\n\n\t}\n\n\tasync writeMaterialAsync( material, materialDef ) {\n\n\t\tif ( ! material.isMeshPhysicalMaterial || material.ior === 1.5 ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\textensionDef.ior = material.ior;\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * Materials specular Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_specular\n */\nclass GLTFMaterialsSpecularExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_specular';\n\n\t}\n\n\tasync writeMaterialAsync( material, materialDef ) {\n\n\t\tif ( ! material.isMeshPhysicalMaterial || ( material.specularIntensity === 1.0 &&\n\t\t       material.specularColor.equals( DEFAULT_SPECULAR_COLOR ) &&\n\t\t     ! material.specularIntensityMap && ! material.specularColorMap ) ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tconst specularIntensityMapDef = {\n\t\t\t\tindex: await writer.processTextureAsync( material.specularIntensityMap ),\n\t\t\t\ttexCoord: material.specularIntensityMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( specularIntensityMapDef, material.specularIntensityMap );\n\t\t\textensionDef.specularTexture = specularIntensityMapDef;\n\n\t\t}\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tconst specularColorMapDef = {\n\t\t\t\tindex: await writer.processTextureAsync( material.specularColorMap ),\n\t\t\t\ttexCoord: material.specularColorMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( specularColorMapDef, material.specularColorMap );\n\t\t\textensionDef.specularColorTexture = specularColorMapDef;\n\n\t\t}\n\n\t\textensionDef.specularFactor = material.specularIntensity;\n\t\textensionDef.specularColorFactor = material.specularColor.toArray();\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * Sheen Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_materials_sheen\n */\nclass GLTFMaterialsSheenExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_sheen';\n\n\t}\n\n\tasync writeMaterialAsync( material, materialDef ) {\n\n\t\tif ( ! material.isMeshPhysicalMaterial || material.sheen == 0.0 ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\tconst sheenRoughnessMapDef = {\n\t\t\t\tindex: await writer.processTextureAsync( material.sheenRoughnessMap ),\n\t\t\t\ttexCoord: material.sheenRoughnessMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( sheenRoughnessMapDef, material.sheenRoughnessMap );\n\t\t\textensionDef.sheenRoughnessTexture = sheenRoughnessMapDef;\n\n\t\t}\n\n\t\tif ( material.sheenColorMap ) {\n\n\t\t\tconst sheenColorMapDef = {\n\t\t\t\tindex: await writer.processTextureAsync( material.sheenColorMap ),\n\t\t\t\ttexCoord: material.sheenColorMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( sheenColorMapDef, material.sheenColorMap );\n\t\t\textensionDef.sheenColorTexture = sheenColorMapDef;\n\n\t\t}\n\n\t\textensionDef.sheenRoughnessFactor = material.sheenRoughness;\n\t\textensionDef.sheenColorFactor = material.sheenColor.toArray();\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * Anisotropy Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_materials_anisotropy\n */\nclass GLTFMaterialsAnisotropyExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_anisotropy';\n\n\t}\n\n\tasync writeMaterialAsync( material, materialDef ) {\n\n\t\tif ( ! material.isMeshPhysicalMaterial || material.anisotropy == 0.0 ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\tif ( material.anisotropyMap ) {\n\n\t\t\tconst anisotropyMapDef = { index: await writer.processTextureAsync( material.anisotropyMap ) };\n\t\t\twriter.applyTextureTransform( anisotropyMapDef, material.anisotropyMap );\n\t\t\textensionDef.anisotropyTexture = anisotropyMapDef;\n\n\t\t}\n\n\t\textensionDef.anisotropyStrength = material.anisotropy;\n\t\textensionDef.anisotropyRotation = material.anisotropyRotation;\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * Materials Emissive Strength Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/blob/5768b3ce0ef32bc39cdf1bef10b948586635ead3/extensions/2.0/Khronos/KHR_materials_emissive_strength/README.md\n */\nclass GLTFMaterialsEmissiveStrengthExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_emissive_strength';\n\n\t}\n\n\tasync writeMaterialAsync( material, materialDef ) {\n\n\t\tif ( ! material.isMeshStandardMaterial || material.emissiveIntensity === 1.0 ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\textensionDef.emissiveStrength = material.emissiveIntensity;\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t}\n\n}\n\n\n/**\n * Materials bump Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/EXT_materials_bump\n */\nclass GLTFMaterialsBumpExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'EXT_materials_bump';\n\n\t}\n\n\tasync writeMaterialAsync( material, materialDef ) {\n\n\t\tif ( ! material.isMeshStandardMaterial || (\n\t\t       material.bumpScale === 1 &&\n\t\t     ! material.bumpMap ) ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tconst bumpMapDef = {\n\t\t\t\tindex: await writer.processTextureAsync( material.bumpMap ),\n\t\t\t\ttexCoord: material.bumpMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( bumpMapDef, material.bumpMap );\n\t\t\textensionDef.bumpTexture = bumpMapDef;\n\n\t\t}\n\n\t\textensionDef.bumpFactor = material.bumpScale;\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * GPU Instancing Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_mesh_gpu_instancing\n */\nclass GLTFMeshGpuInstancing {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'EXT_mesh_gpu_instancing';\n\n\t}\n\n\twriteNode( object, nodeDef ) {\n\n\t\tif ( ! object.isInstancedMesh ) return;\n\n\t\tconst writer = this.writer;\n\n\t\tconst mesh = object;\n\n\t\tconst translationAttr = new Float32Array( mesh.count * 3 );\n\t\tconst rotationAttr = new Float32Array( mesh.count * 4 );\n\t\tconst scaleAttr = new Float32Array( mesh.count * 3 );\n\n\t\tconst matrix = new Matrix4();\n\t\tconst position = new Vector3();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3();\n\n\t\tfor ( let i = 0; i < mesh.count; i ++ ) {\n\n\t\t\tmesh.getMatrixAt( i, matrix );\n\t\t\tmatrix.decompose( position, quaternion, scale );\n\n\t\t\tposition.toArray( translationAttr, i * 3 );\n\t\t\tquaternion.toArray( rotationAttr, i * 4 );\n\t\t\tscale.toArray( scaleAttr, i * 3 );\n\n\t\t}\n\n\t\tconst attributes = {\n\t\t\tTRANSLATION: writer.processAccessor( new BufferAttribute( translationAttr, 3 ) ),\n\t\t\tROTATION: writer.processAccessor( new BufferAttribute( rotationAttr, 4 ) ),\n\t\t\tSCALE: writer.processAccessor( new BufferAttribute( scaleAttr, 3 ) ),\n\t\t};\n\n\t\tif ( mesh.instanceColor )\n\t\t\tattributes._COLOR_0 = writer.processAccessor( mesh.instanceColor );\n\n\t\tnodeDef.extensions = nodeDef.extensions || {};\n\t\tnodeDef.extensions[ this.name ] = { attributes };\n\n\t\twriter.extensionsUsed[ this.name ] = true;\n\t\twriter.extensionsRequired[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * Static utility functions\n */\nGLTFExporter.Utils = {\n\n\tinsertKeyframe: function ( track, time ) {\n\n\t\tconst tolerance = 0.001; // 1ms\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = new track.TimeBufferType( track.times.length + 1 );\n\t\tconst values = new track.ValueBufferType( track.values.length + valueSize );\n\t\tconst interpolant = track.createInterpolant( new track.ValueBufferType( valueSize ) );\n\n\t\tlet index;\n\n\t\tif ( track.times.length === 0 ) {\n\n\t\t\ttimes[ 0 ] = time;\n\n\t\t\tfor ( let i = 0; i < valueSize; i ++ ) {\n\n\t\t\t\tvalues[ i ] = 0;\n\n\t\t\t}\n\n\t\t\tindex = 0;\n\n\t\t} else if ( time < track.times[ 0 ] ) {\n\n\t\t\tif ( Math.abs( track.times[ 0 ] - time ) < tolerance ) return 0;\n\n\t\t\ttimes[ 0 ] = time;\n\t\t\ttimes.set( track.times, 1 );\n\n\t\t\tvalues.set( interpolant.evaluate( time ), 0 );\n\t\t\tvalues.set( track.values, valueSize );\n\n\t\t\tindex = 0;\n\n\t\t} else if ( time > track.times[ track.times.length - 1 ] ) {\n\n\t\t\tif ( Math.abs( track.times[ track.times.length - 1 ] - time ) < tolerance ) {\n\n\t\t\t\treturn track.times.length - 1;\n\n\t\t\t}\n\n\t\t\ttimes[ times.length - 1 ] = time;\n\t\t\ttimes.set( track.times, 0 );\n\n\t\t\tvalues.set( track.values, 0 );\n\t\t\tvalues.set( interpolant.evaluate( time ), track.values.length );\n\n\t\t\tindex = times.length - 1;\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < track.times.length; i ++ ) {\n\n\t\t\t\tif ( Math.abs( track.times[ i ] - time ) < tolerance ) return i;\n\n\t\t\t\tif ( track.times[ i ] < time && track.times[ i + 1 ] > time ) {\n\n\t\t\t\t\ttimes.set( track.times.slice( 0, i + 1 ), 0 );\n\t\t\t\t\ttimes[ i + 1 ] = time;\n\t\t\t\t\ttimes.set( track.times.slice( i + 1 ), i + 2 );\n\n\t\t\t\t\tvalues.set( track.values.slice( 0, ( i + 1 ) * valueSize ), 0 );\n\t\t\t\t\tvalues.set( interpolant.evaluate( time ), ( i + 1 ) * valueSize );\n\t\t\t\t\tvalues.set( track.values.slice( ( i + 1 ) * valueSize ), ( i + 2 ) * valueSize );\n\n\t\t\t\t\tindex = i + 1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttrack.times = times;\n\t\ttrack.values = values;\n\n\t\treturn index;\n\n\t},\n\n\tmergeMorphTargetTracks: function ( clip, root ) {\n\n\t\tconst tracks = [];\n\t\tconst mergedTracks = {};\n\t\tconst sourceTracks = clip.tracks;\n\n\t\tfor ( let i = 0; i < sourceTracks.length; ++ i ) {\n\n\t\t\tlet sourceTrack = sourceTracks[ i ];\n\t\t\tconst sourceTrackBinding = PropertyBinding.parseTrackName( sourceTrack.name );\n\t\t\tconst sourceTrackNode = PropertyBinding.findNode( root, sourceTrackBinding.nodeName );\n\n\t\t\tif ( sourceTrackBinding.propertyName !== 'morphTargetInfluences' || sourceTrackBinding.propertyIndex === undefined ) {\n\n\t\t\t\t// Tracks that don't affect morph targets, or that affect all morph targets together, can be left as-is.\n\t\t\t\ttracks.push( sourceTrack );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( sourceTrack.createInterpolant !== sourceTrack.InterpolantFactoryMethodDiscrete\n\t\t\t\t&& sourceTrack.createInterpolant !== sourceTrack.InterpolantFactoryMethodLinear ) {\n\n\t\t\t\tif ( sourceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\t\t// This should never happen, because glTF morph target animations\n\t\t\t\t\t// affect all targets already.\n\t\t\t\t\tthrow new Error( 'THREE.GLTFExporter: Cannot merge tracks with glTF CUBICSPLINE interpolation.' );\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Morph target interpolation mode not yet supported. Using LINEAR instead.' );\n\n\t\t\t\tsourceTrack = sourceTrack.clone();\n\t\t\t\tsourceTrack.setInterpolation( InterpolateLinear );\n\n\t\t\t}\n\n\t\t\tconst targetCount = sourceTrackNode.morphTargetInfluences.length;\n\t\t\tconst targetIndex = sourceTrackNode.morphTargetDictionary[ sourceTrackBinding.propertyIndex ];\n\n\t\t\tif ( targetIndex === undefined ) {\n\n\t\t\t\tthrow new Error( 'THREE.GLTFExporter: Morph target name not found: ' + sourceTrackBinding.propertyIndex );\n\n\t\t\t}\n\n\t\t\tlet mergedTrack;\n\n\t\t\t// If this is the first time we've seen this object, create a new\n\t\t\t// track to store merged keyframe data for each morph target.\n\t\t\tif ( mergedTracks[ sourceTrackNode.uuid ] === undefined ) {\n\n\t\t\t\tmergedTrack = sourceTrack.clone();\n\n\t\t\t\tconst values = new mergedTrack.ValueBufferType( targetCount * mergedTrack.times.length );\n\n\t\t\t\tfor ( let j = 0; j < mergedTrack.times.length; j ++ ) {\n\n\t\t\t\t\tvalues[ j * targetCount + targetIndex ] = mergedTrack.values[ j ];\n\n\t\t\t\t}\n\n\t\t\t\t// We need to take into consideration the intended target node\n\t\t\t\t// of our original un-merged morphTarget animation.\n\t\t\t\tmergedTrack.name = ( sourceTrackBinding.nodeName || '' ) + '.morphTargetInfluences';\n\t\t\t\tmergedTrack.values = values;\n\n\t\t\t\tmergedTracks[ sourceTrackNode.uuid ] = mergedTrack;\n\t\t\t\ttracks.push( mergedTrack );\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst sourceInterpolant = sourceTrack.createInterpolant( new sourceTrack.ValueBufferType( 1 ) );\n\n\t\t\tmergedTrack = mergedTracks[ sourceTrackNode.uuid ];\n\n\t\t\t// For every existing keyframe of the merged track, write a (possibly\n\t\t\t// interpolated) value from the source track.\n\t\t\tfor ( let j = 0; j < mergedTrack.times.length; j ++ ) {\n\n\t\t\t\tmergedTrack.values[ j * targetCount + targetIndex ] = sourceInterpolant.evaluate( mergedTrack.times[ j ] );\n\n\t\t\t}\n\n\t\t\t// For every existing keyframe of the source track, write a (possibly\n\t\t\t// new) keyframe to the merged track. Values from the previous loop may\n\t\t\t// be written again, but keyframes are de-duplicated.\n\t\t\tfor ( let j = 0; j < sourceTrack.times.length; j ++ ) {\n\n\t\t\t\tconst keyframeIndex = this.insertKeyframe( mergedTrack, sourceTrack.times[ j ] );\n\t\t\t\tmergedTrack.values[ keyframeIndex * targetCount + targetIndex ] = sourceTrack.values[ j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tclip.tracks = tracks;\n\n\t\treturn clip;\n\n\t},\n\n\ttoFloat32BufferAttribute: function ( srcAttribute ) {\n\n\t\tconst dstAttribute = new BufferAttribute( new Float32Array( srcAttribute.count * srcAttribute.itemSize ), srcAttribute.itemSize, false );\n\n\t\tif ( ! srcAttribute.normalized && ! srcAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\tdstAttribute.array.set( srcAttribute.array );\n\n\t\t\treturn dstAttribute;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = srcAttribute.count; i < il; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < srcAttribute.itemSize; j ++ ) {\n\n\t\t\t\tdstAttribute.setComponent( i, j, srcAttribute.getComponent( i, j ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn dstAttribute;\n\n\t}\n\n};\n\nexport { GLTFExporter };\n"],
  "mappings": "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",
  "names": ["init_define_process", "KHR_mesh_quantization_ExtraAttrTypes", "GLTFExporter", "writer", "GLTFLightExtension", "GLTFMaterialsUnlitExtension", "GLTFMaterialsTransmissionExtension", "GLTFMaterialsVolumeExtension", "GLTFMaterialsIorExtension", "GLTFMaterialsSpecularExtension", "GLTFMaterialsClearcoatExtension", "GLTFMaterialsDispersionExtension", "GLTFMaterialsIridescenceExtension", "GLTFMaterialsSheenExtension", "GLTFMaterialsAnisotropyExtension", "GLTFMaterialsEmissiveStrengthExtension", "GLTFMaterialsBumpExtension", "GLTFMeshGpuInstancing", "callback", "utils", "input", "onDone", "onError", "options", "GLTFWriter", "plugins", "i", "il", "scope", "resolve", "reject", "WEBGL_CONSTANTS", "KHR_MESH_QUANTIZATION", "THREE_TO_WEBGL", "NearestFilter", "NearestMipmapNearestFilter", "NearestMipmapLinearFilter", "LinearFilter", "LinearMipmapNearestFilter", "LinearMipmapLinearFilter", "ClampToEdgeWrapping", "RepeatWrapping", "MirroredRepeatWrapping", "PATH_PROPERTIES", "DEFAULT_SPECULAR_COLOR", "Color", "GLB_HEADER_BYTES", "GLB_HEADER_MAGIC", "GLB_VERSION", "GLB_CHUNK_PREFIX_BYTES", "GLB_CHUNK_TYPE_JSON", "GLB_CHUNK_TYPE_BIN", "equalArray", "array1", "array2", "element", "index", "stringToArrayBuffer", "text", "isIdentityMatrix", "matrix", "getMinMax", "attribute", "start", "count", "output", "a", "value", "MathUtils", "getPaddedBufferSize", "bufferSize", "getPaddedArrayBuffer", "arrayBuffer", "paddingByte", "paddedLength", "array", "getCanvas", "getToBlobPromise", "canvas", "mimeType", "quality", "REVISION", "buffers", "json", "extensionsUsed", "extensionsRequired", "blob", "extensionsUsedList", "extensionsRequiredList", "reader", "binaryChunk", "binaryChunkPrefix", "jsonChunk", "jsonChunkPrefix", "header", "headerView", "totalByteLength", "glbBlob", "glbReader", "base64data", "object", "objectDef", "extensionName", "error", "isRelativeCopy", "uids", "normal", "v", "Vector3", "cache", "mapDef", "texture", "didTransform", "transformDef", "metalnessMap", "roughnessMap", "getEncodingConversion", "map", "SRGBColorSpace", "c", "CompressedTexture", "metalness", "roughness", "width", "height", "context", "composite", "convert", "data", "Source", "NoColorSpace", "maxTextureSize", "buffer", "componentType", "target", "componentSize", "byteStride", "byteLength", "dataView", "offset", "bufferViewDef", "geometry", "types", "minMax", "bufferViewTarget", "bufferView", "accessorDef", "image", "format", "flipY", "pending", "cachedImages", "key", "imageDef", "ctx", "RGBAFormat", "bufferViewIndex", "dataURL", "samplerDef", "textureDef", "ext", "material", "materialDef", "color", "metalRoughTexture", "metalRoughMapDef", "baseColorMapDef", "emissive", "emissiveMapDef", "normalMapDef", "occlusionMapDef", "DoubleSide", "mesh", "meshCacheKeyParts", "l", "meshCacheKey", "mode", "meshDef", "attributes", "primitives", "targets", "nameConversion", "originalNormal", "modifiedAttribute", "attributeName", "BufferAttribute", "accessor", "weights", "targetNames", "reverseDictionary", "warned", "gltfAttributeName", "baseAttribute", "relativeAttribute", "j", "jl", "isMultiMaterial", "didForceIndices", "indices", "materials", "groups", "primitive", "cacheKey", "attrType", "attrNamePrefix", "camera", "isOrtho", "cameraDef", "clip", "root", "nodeMap", "tracks", "channels", "samplers", "track", "trackBinding", "PropertyBinding", "trackNode", "trackProperty", "inputItemSize", "outputItemSize", "interpolation", "InterpolateDiscrete", "node", "skeleton", "rootJoint", "joints", "inverseBindMatrices", "temporaryBoneInverse", "Matrix4", "nodeDef", "rotation", "position", "scale", "meshIndex", "children", "child", "nodeIndex", "scene", "sceneDef", "nodes", "objects", "Scene", "objectsWithoutScene", "func", "light", "lightDef", "lights", "extensionDef", "clearcoatMapDef", "clearcoatRoughnessMapDef", "clearcoatNormalMapDef", "iridescenceMapDef", "iridescenceThicknessMapDef", "transmissionMapDef", "thicknessMapDef", "specularIntensityMapDef", "specularColorMapDef", "sheenRoughnessMapDef", "sheenColorMapDef", "anisotropyMapDef", "bumpMapDef", "translationAttr", "rotationAttr", "scaleAttr", "quaternion", "Quaternion", "time", "valueSize", "times", "values", "interpolant", "mergedTracks", "sourceTracks", "sourceTrack", "sourceTrackBinding", "sourceTrackNode", "InterpolateLinear", "targetCount", "targetIndex", "mergedTrack", "sourceInterpolant", "keyframeIndex", "srcAttribute", "dstAttribute"]
}
